{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\braed\\\\OneDrive\\\\Desktop\\\\LoreKeep\\\\frontend\\\\src\\\\components\\\\LoreMap\\\\LoreMap.jsx\",\n  _s = $RefreshSig$();\n// LoreMap.jsx - Complete version with conditional logic\nimport React, { useState, useEffect, useRef } from 'react';\nimport './LoreMap.css';\nimport EventConditions from './EventConditions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoreMap = ({\n  initialEvents,\n  initialConnections,\n  onChange,\n  loreMapId\n}) => {\n  _s();\n  var _window$event, _window$event2;\n  const [events, setEvents] = useState(initialEvents || []);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [isCreatingEvent, setIsCreatingEvent] = useState(false);\n  const [newEventPosition, setNewEventPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [newEventData, setNewEventData] = useState({\n    title: '',\n    description: '',\n    location: '',\n    isPartyLocation: false\n  });\n  const [connections, setConnections] = useState(initialConnections || []);\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggedEvent, setDraggedEvent] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isCreatingConnection, setIsCreatingConnection] = useState(false);\n  const [connectionStart, setConnectionStart] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [eventCharacters, setEventCharacters] = useState([]);\n  const [eventStates, setEventStates] = useState({}); // Track completed events, character states, etc.\n\n  const canvasRef = useRef(null);\n\n  // Update parent component when data changes\n  useEffect(() => {\n    if (onChange) {\n      onChange({\n        id: loreMapId,\n        events: events,\n        connections: connections\n      });\n    }\n  }, [events, connections, onChange, loreMapId]);\n\n  // Initialize from props\n  useEffect(() => {\n    if (initialEvents && initialEvents.length > 0) {\n      setEvents(initialEvents);\n    }\n    if (initialConnections && initialConnections.length > 0) {\n      setConnections(initialConnections);\n    }\n  }, [initialEvents, initialConnections]);\n\n  // Fetch characters\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/characters', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setCharacters(data);\n        }\n      } catch (err) {\n        console.error('Failed to fetch characters:', err);\n      }\n    };\n    fetchCharacters();\n  }, []);\n\n  // Fetch event characters when an event is selected\n  useEffect(() => {\n    if (selectedEvent && selectedEvent.id) {\n      const fetchEventCharacters = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters`, {\n            method: 'GET',\n            credentials: 'include'\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setEventCharacters(data.map(ec => ec.character_id));\n          }\n        } catch (err) {\n          console.error('Failed to fetch event characters:', err);\n        }\n      };\n      fetchEventCharacters();\n    } else {\n      setEventCharacters([]);\n    }\n  }, [selectedEvent]);\n\n  // Check if event conditions are met\n  const checkEventConditions = event => {\n    if (!event.conditions || event.conditions.length === 0) {\n      return true; // No conditions = always accessible\n    }\n    return event.conditions.every(condition => {\n      switch (condition.type) {\n        case 'event_completed':\n          const isCompleted = eventStates[`event_${condition.target}_completed`] || false;\n          return condition.required ? isCompleted : !isCompleted;\n        case 'character_freed':\n          const isFreed = eventStates[`character_${condition.target}_freed`] || false;\n          return condition.required ? isFreed : !isFreed;\n        case 'character_alive':\n          const isAlive = eventStates[`character_${condition.target}_alive`] !== false; // Default to alive\n          return condition.required ? isAlive : !isAlive;\n        case 'custom':\n          // For custom conditions, you might want to implement a simple true/false toggle\n          const customState = eventStates[`custom_${condition.id}`] || false;\n          return condition.required ? customState : !customState;\n        default:\n          return true;\n      }\n    });\n  };\n\n  // Toggle event completion state\n  const toggleEventCompleted = eventId => {\n    const key = `event_${eventId}_completed`;\n    setEventStates(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n\n  // Toggle character state\n  const toggleCharacterState = (characterId, stateType) => {\n    const key = `character_${characterId}_${stateType}`;\n    setEventStates(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n\n  // Handle conditions change for selected event\n  const handleConditionsChange = newConditions => {\n    if (!selectedEvent) return;\n    const updatedEvent = {\n      ...selectedEvent,\n      conditions: newConditions\n    };\n    setSelectedEvent(updatedEvent);\n    setEvents(events.map(evt => evt.id === selectedEvent.id ? updatedEvent : evt));\n  };\n\n  // Add character to event\n  const handleAddCharacterToEvent = async characterId => {\n    if (!selectedEvent || !characterId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          character_id: characterId,\n          role: 'present'\n        })\n      });\n      if (response.ok) {\n        setEventCharacters([...eventCharacters, characterId]);\n      }\n    } catch (err) {\n      console.error('Failed to add character to event:', err);\n    }\n  };\n\n  // Remove character from event\n  const handleRemoveCharacterFromEvent = async characterId => {\n    if (!selectedEvent) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters/${characterId}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setEventCharacters(eventCharacters.filter(id => id !== characterId));\n      }\n    } catch (err) {\n      console.error('Failed to remove character from event:', err);\n    }\n  };\n\n  // Canvas right-click for new event\n  const handleCanvasContextMenu = e => {\n    e.preventDefault();\n\n    // If in connection mode, cancel it\n    if (isCreatingConnection) {\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setNewEventPosition({\n      x,\n      y\n    });\n    setIsCreatingEvent(true);\n  };\n\n  // Handle event click\n  const handleEventClick = (event, e) => {\n    e.stopPropagation();\n\n    // If in connection creation mode, complete the connection\n    if (isCreatingConnection && connectionStart && connectionStart.id !== event.id) {\n      // Create a new connection\n      const newConnection = {\n        id: Date.now(),\n        // Temporary ID, will be replaced when saved to backend\n        from: connectionStart.id,\n        to: event.id,\n        description: ''\n      };\n      setConnections([...connections, newConnection]);\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    setSelectedEvent(event);\n  };\n\n  // Start creating a connection\n  const handleAddConnection = () => {\n    if (!selectedEvent) return;\n    setIsCreatingConnection(true);\n    setConnectionStart(selectedEvent);\n    setSelectedEvent(null);\n  };\n\n  // Delete an event\n  const handleDeleteEvent = () => {\n    if (!selectedEvent) return;\n\n    // Remove the event\n    setEvents(events.filter(e => e.id !== selectedEvent.id));\n\n    // Remove connections to/from this event\n    setConnections(connections.filter(c => c.from !== selectedEvent.id && c.to !== selectedEvent.id));\n    setSelectedEvent(null);\n  };\n\n  // Handle event drag start\n  const handleEventDragStart = (e, event) => {\n    e.stopPropagation();\n\n    // Don't start dragging if in connection mode\n    if (isCreatingConnection) return;\n    setIsDragging(true);\n    setDraggedEvent(event);\n    const rect = e.currentTarget.getBoundingClientRect();\n    setDragOffset({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n\n  // Handle mouse move for dragging\n  const handleMouseMove = e => {\n    if (isDragging && draggedEvent) {\n      const rect = canvasRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left - dragOffset.x;\n      const y = e.clientY - rect.top - dragOffset.y;\n      setEvents(events.map(evt => evt.id === draggedEvent.id ? {\n        ...evt,\n        position: {\n          x,\n          y\n        }\n      } : evt));\n    }\n  };\n\n  // Handle mouse up to stop dragging\n  const handleMouseUp = () => {\n    if (isDragging) {\n      setIsDragging(false);\n      setDraggedEvent(null);\n    }\n  };\n\n  // Create a new event\n  const handleCreateEvent = () => {\n    const newEvent = {\n      id: Date.now(),\n      // Temporary ID, will be replaced when saved to backend\n      ...newEventData,\n      position: newEventPosition,\n      conditions: [] // Initialize with empty conditions\n    };\n    setEvents([...events, newEvent]);\n    setIsCreatingEvent(false);\n    setNewEventData({\n      title: '',\n      description: '',\n      location: '',\n      isPartyLocation: false\n    });\n  };\n\n  // Update event\n  const handleUpdateEvent = () => {\n    if (!selectedEvent) return;\n    setEvents(events.map(evt => evt.id === selectedEvent.id ? {\n      ...selectedEvent\n    } : evt));\n    setSelectedEvent(null);\n  };\n\n  // Handle canvas click to deselect \n  const handleCanvasClick = () => {\n    // If in connection mode, cancel it\n    if (isCreatingConnection) {\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    setSelectedEvent(null);\n  };\n\n  // Cancel event creation\n  const handleCancelCreate = () => {\n    setIsCreatingEvent(false);\n  };\n\n  // Draw connections between events\n  const renderConnections = () => {\n    return connections.map((connection, index) => {\n      const fromEvent = events.find(e => e.id === connection.from);\n      const toEvent = events.find(e => e.id === connection.to);\n      if (!fromEvent || !toEvent) return null;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: fromEvent.position.x + 75,\n        y1: fromEvent.position.y + 25,\n        x2: toEvent.position.x + 75,\n        y2: toEvent.position.y + 25,\n        stroke: connectionStart && connectionStart.id === fromEvent.id ? \"#3498db\" : \"#666\",\n        strokeWidth: \"2\",\n        markerEnd: \"url(#arrowhead)\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lore-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lore-map-canvas\",\n      ref: canvasRef,\n      onContextMenu: handleCanvasContextMenu,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      onClick: handleCanvasClick,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"100%\",\n        height: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"arrowhead\",\n            markerWidth: \"10\",\n            markerHeight: \"7\",\n            refX: \"9\",\n            refY: \"3.5\",\n            orient: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"0 0, 10 3.5, 0 7\",\n              fill: \"#666\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), renderConnections(), isCreatingConnection && connectionStart && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: connectionStart.position.x + 75,\n          y1: connectionStart.position.y + 25,\n          x2: isDragging ? draggedEvent.position.x + 75 : ((_window$event = window.event) === null || _window$event === void 0 ? void 0 : _window$event.clientX) - canvasRef.current.getBoundingClientRect().left,\n          y2: isDragging ? draggedEvent.position.y + 25 : ((_window$event2 = window.event) === null || _window$event2 === void 0 ? void 0 : _window$event2.clientY) - canvasRef.current.getBoundingClientRect().top,\n          stroke: \"#3498db\",\n          strokeWidth: \"2\",\n          strokeDasharray: \"5,5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), events.map(event => {\n        const isAccessible = checkEventConditions(event);\n        const isCompleted = eventStates[`event_${event.id}_completed`] || false;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `event-node \n                ${event.isPartyLocation ? 'party-location' : ''} \n                ${(selectedEvent === null || selectedEvent === void 0 ? void 0 : selectedEvent.id) === event.id ? 'selected' : ''} \n                ${(connectionStart === null || connectionStart === void 0 ? void 0 : connectionStart.id) === event.id ? 'connection-source' : ''}\n                ${!isAccessible ? 'conditional-locked' : ''}\n                ${isCompleted ? 'completed' : ''}\n              `,\n          style: {\n            left: `${event.position.x}px`,\n            top: `${event.position.y}px`\n          },\n          onClick: e => handleEventClick(event, e),\n          onMouseDown: e => handleEventDragStart(e, event),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-location\",\n            children: event.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), !isAccessible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator locked\",\n            children: \"\\uD83D\\uDD12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 17\n          }, this), isCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator completed\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this), event.conditions && event.conditions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator has-conditions\",\n            children: \"\\u2699\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this);\n      }), isCreatingConnection && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-help-text\",\n        children: \"Click on another event to create a connection, or right-click to cancel.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-details-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedEvent.title,\n          onChange: e => setSelectedEvent({\n            ...selectedEvent,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedEvent.location,\n          onChange: e => setSelectedEvent({\n            ...selectedEvent,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: selectedEvent.description,\n          onChange: e => setSelectedEvent({\n            ...selectedEvent,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedEvent.isPartyLocation,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              isPartyLocation: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), \"Party is here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: eventStates[`event_${selectedEvent.id}_completed`] || false,\n            onChange: () => toggleEventCompleted(selectedEvent.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), \"Mark as completed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-characters\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Characters Present\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-select\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: \"\",\n            onChange: e => {\n              if (e.target.value) handleAddCharacterToEvent(parseInt(e.target.value, 10));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Add a character...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), characters.map(char => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: char.id,\n              children: char.name\n            }, char.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-list\",\n          children: eventCharacters.map(charId => {\n            const character = characters.find(c => c.id === charId);\n            if (!character) return null;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-character-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: character.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"character-type-badge\",\n                children: character.character_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-character-btn\",\n                onClick: () => handleRemoveCharacterFromEvent(charId),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 21\n              }, this)]\n            }, charId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EventConditions, {\n        conditions: selectedEvent.conditions || [],\n        onConditionsChange: handleConditionsChange,\n        availableEvents: events.filter(e => e.id !== selectedEvent.id) // Don't include self\n        ,\n        availableCharacters: characters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-states\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Character States\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-state-toggles\",\n          children: characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"character-state-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"character-name\",\n              children: character.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"state-toggles\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: eventStates[`character_${character.id}_freed`] || false,\n                  onChange: () => toggleCharacterState(character.id, 'freed')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 23\n                }, this), \"Freed\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: eventStates[`character_${character.id}_alive`] !== false,\n                  onChange: () => toggleCharacterState(character.id, 'alive')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 23\n                }, this), \"Alive\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 19\n            }, this)]\n          }, character.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateEvent,\n          children: \"Update Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddConnection,\n          children: \"Add Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: handleDeleteEvent,\n          children: \"Delete Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }, this), isCreatingEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-event-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newEventData.title,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newEventData.location,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newEventData.description,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: newEventData.isPartyLocation,\n            onChange: e => setNewEventData({\n              ...newEventData,\n              isPartyLocation: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this), \"Party is here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateEvent,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelCreate,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(LoreMap, \"cj7aLx50y4Jg2uep+DL1S2+h2CQ=\");\n_c = LoreMap;\nexport default LoreMap;\nvar _c;\n$RefreshReg$(_c, \"LoreMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","EventConditions","jsxDEV","_jsxDEV","LoreMap","initialEvents","initialConnections","onChange","loreMapId","_s","_window$event","_window$event2","events","setEvents","selectedEvent","setSelectedEvent","isCreatingEvent","setIsCreatingEvent","newEventPosition","setNewEventPosition","x","y","newEventData","setNewEventData","title","description","location","isPartyLocation","connections","setConnections","isDragging","setIsDragging","draggedEvent","setDraggedEvent","dragOffset","setDragOffset","isCreatingConnection","setIsCreatingConnection","connectionStart","setConnectionStart","characters","setCharacters","eventCharacters","setEventCharacters","eventStates","setEventStates","canvasRef","id","length","fetchCharacters","response","fetch","method","credentials","ok","data","json","err","console","error","fetchEventCharacters","map","ec","character_id","checkEventConditions","event","conditions","every","condition","type","isCompleted","target","required","isFreed","isAlive","customState","toggleEventCompleted","eventId","key","prev","toggleCharacterState","characterId","stateType","handleConditionsChange","newConditions","updatedEvent","evt","handleAddCharacterToEvent","headers","body","JSON","stringify","role","handleRemoveCharacterFromEvent","filter","handleCanvasContextMenu","e","preventDefault","rect","current","getBoundingClientRect","clientX","left","clientY","top","handleEventClick","stopPropagation","newConnection","Date","now","from","to","handleAddConnection","handleDeleteEvent","c","handleEventDragStart","currentTarget","handleMouseMove","position","handleMouseUp","handleCreateEvent","newEvent","handleUpdateEvent","handleCanvasClick","handleCancelCreate","renderConnections","connection","index","fromEvent","find","toEvent","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","className","children","ref","onContextMenu","onMouseMove","onMouseUp","onMouseLeave","onClick","width","height","markerWidth","markerHeight","refX","refY","orient","points","fill","window","strokeDasharray","isAccessible","style","onMouseDown","value","checked","parseInt","char","name","charId","character","character_type","onConditionsChange","availableEvents","availableCharacters","_c","$RefreshReg$"],"sources":["C:/Users/braed/OneDrive/Desktop/LoreKeep/frontend/src/components/LoreMap/LoreMap.jsx"],"sourcesContent":["// LoreMap.jsx - Complete version with conditional logic\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './LoreMap.css';\r\nimport EventConditions from './EventConditions';\r\n\r\nconst LoreMap = ({ initialEvents, initialConnections, onChange, loreMapId }) => {\r\n  const [events, setEvents] = useState(initialEvents || []);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [isCreatingEvent, setIsCreatingEvent] = useState(false);\r\n  const [newEventPosition, setNewEventPosition] = useState({ x: 0, y: 0 });\r\n  const [newEventData, setNewEventData] = useState({\r\n    title: '',\r\n    description: '',\r\n    location: '',\r\n    isPartyLocation: false,\r\n  });\r\n  const [connections, setConnections] = useState(initialConnections || []);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [draggedEvent, setDraggedEvent] = useState(null);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [isCreatingConnection, setIsCreatingConnection] = useState(false);\r\n  const [connectionStart, setConnectionStart] = useState(null);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [eventCharacters, setEventCharacters] = useState([]);\r\n  const [eventStates, setEventStates] = useState({}); // Track completed events, character states, etc.\r\n  \r\n  const canvasRef = useRef(null);\r\n\r\n  // Update parent component when data changes\r\n  useEffect(() => {\r\n    if (onChange) {\r\n      onChange({\r\n        id: loreMapId,\r\n        events: events,\r\n        connections: connections\r\n      });\r\n    }\r\n  }, [events, connections, onChange, loreMapId]);\r\n\r\n  // Initialize from props\r\n  useEffect(() => {\r\n    if (initialEvents && initialEvents.length > 0) {\r\n      setEvents(initialEvents);\r\n    }\r\n    if (initialConnections && initialConnections.length > 0) {\r\n      setConnections(initialConnections);\r\n    }\r\n  }, [initialEvents, initialConnections]);\r\n\r\n  // Fetch characters\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/characters', {\r\n          method: 'GET',\r\n          credentials: 'include'\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setCharacters(data);\r\n        }\r\n      } catch (err) {\r\n        console.error('Failed to fetch characters:', err);\r\n      }\r\n    };\r\n    \r\n    fetchCharacters();\r\n  }, []);\r\n\r\n  // Fetch event characters when an event is selected\r\n  useEffect(() => {\r\n    if (selectedEvent && selectedEvent.id) {\r\n      const fetchEventCharacters = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters`, {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n          });\r\n          \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setEventCharacters(data.map(ec => ec.character_id));\r\n          }\r\n        } catch (err) {\r\n          console.error('Failed to fetch event characters:', err);\r\n        }\r\n      };\r\n      \r\n      fetchEventCharacters();\r\n    } else {\r\n      setEventCharacters([]);\r\n    }\r\n  }, [selectedEvent]);\r\n\r\n  // Check if event conditions are met\r\n  const checkEventConditions = (event) => {\r\n    if (!event.conditions || event.conditions.length === 0) {\r\n      return true; // No conditions = always accessible\r\n    }\r\n    \r\n    return event.conditions.every(condition => {\r\n      switch (condition.type) {\r\n        case 'event_completed':\r\n          const isCompleted = eventStates[`event_${condition.target}_completed`] || false;\r\n          return condition.required ? isCompleted : !isCompleted;\r\n          \r\n        case 'character_freed':\r\n          const isFreed = eventStates[`character_${condition.target}_freed`] || false;\r\n          return condition.required ? isFreed : !isFreed;\r\n          \r\n        case 'character_alive':\r\n          const isAlive = eventStates[`character_${condition.target}_alive`] !== false; // Default to alive\r\n          return condition.required ? isAlive : !isAlive;\r\n          \r\n        case 'custom':\r\n          // For custom conditions, you might want to implement a simple true/false toggle\r\n          const customState = eventStates[`custom_${condition.id}`] || false;\r\n          return condition.required ? customState : !customState;\r\n          \r\n        default:\r\n          return true;\r\n      }\r\n    });\r\n  };\r\n\r\n  // Toggle event completion state\r\n  const toggleEventCompleted = (eventId) => {\r\n    const key = `event_${eventId}_completed`;\r\n    setEventStates(prev => ({\r\n      ...prev,\r\n      [key]: !prev[key]\r\n    }));\r\n  };\r\n\r\n  // Toggle character state\r\n  const toggleCharacterState = (characterId, stateType) => {\r\n    const key = `character_${characterId}_${stateType}`;\r\n    setEventStates(prev => ({\r\n      ...prev,\r\n      [key]: !prev[key]\r\n    }));\r\n  };\r\n\r\n  // Handle conditions change for selected event\r\n  const handleConditionsChange = (newConditions) => {\r\n    if (!selectedEvent) return;\r\n    \r\n    const updatedEvent = {\r\n      ...selectedEvent,\r\n      conditions: newConditions\r\n    };\r\n    \r\n    setSelectedEvent(updatedEvent);\r\n    setEvents(events.map(evt => \r\n      evt.id === selectedEvent.id ? updatedEvent : evt\r\n    ));\r\n  };\r\n\r\n  // Add character to event\r\n  const handleAddCharacterToEvent = async (characterId) => {\r\n    if (!selectedEvent || !characterId) return;\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          character_id: characterId,\r\n          role: 'present'\r\n        })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setEventCharacters([...eventCharacters, characterId]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to add character to event:', err);\r\n    }\r\n  };\r\n\r\n  // Remove character from event\r\n  const handleRemoveCharacterFromEvent = async (characterId) => {\r\n    if (!selectedEvent) return;\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters/${characterId}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setEventCharacters(eventCharacters.filter(id => id !== characterId));\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to remove character from event:', err);\r\n    }\r\n  };\r\n\r\n  // Canvas right-click for new event\r\n  const handleCanvasContextMenu = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // If in connection mode, cancel it\r\n    if (isCreatingConnection) {\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    setNewEventPosition({ x, y });\r\n    setIsCreatingEvent(true);\r\n  };\r\n\r\n  // Handle event click\r\n  const handleEventClick = (event, e) => {\r\n    e.stopPropagation();\r\n    \r\n    // If in connection creation mode, complete the connection\r\n    if (isCreatingConnection && connectionStart && connectionStart.id !== event.id) {\r\n      // Create a new connection\r\n      const newConnection = {\r\n        id: Date.now(), // Temporary ID, will be replaced when saved to backend\r\n        from: connectionStart.id,\r\n        to: event.id,\r\n        description: ''\r\n      };\r\n      \r\n      setConnections([...connections, newConnection]);\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    setSelectedEvent(event);\r\n  };\r\n\r\n  // Start creating a connection\r\n  const handleAddConnection = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    setIsCreatingConnection(true);\r\n    setConnectionStart(selectedEvent);\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Delete an event\r\n  const handleDeleteEvent = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    // Remove the event\r\n    setEvents(events.filter(e => e.id !== selectedEvent.id));\r\n    \r\n    // Remove connections to/from this event\r\n    setConnections(connections.filter(\r\n      c => c.from !== selectedEvent.id && c.to !== selectedEvent.id\r\n    ));\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Handle event drag start\r\n  const handleEventDragStart = (e, event) => {\r\n    e.stopPropagation();\r\n    \r\n    // Don't start dragging if in connection mode\r\n    if (isCreatingConnection) return;\r\n    \r\n    setIsDragging(true);\r\n    setDraggedEvent(event);\r\n    \r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    setDragOffset({\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top,\r\n    });\r\n  };\r\n\r\n  // Handle mouse move for dragging\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && draggedEvent) {\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - dragOffset.x;\r\n      const y = e.clientY - rect.top - dragOffset.y;\r\n      \r\n      setEvents(events.map(evt => \r\n        evt.id === draggedEvent.id \r\n          ? { ...evt, position: { x, y } } \r\n          : evt\r\n      ));\r\n    }\r\n  };\r\n\r\n  // Handle mouse up to stop dragging\r\n  const handleMouseUp = () => {\r\n    if (isDragging) {\r\n      setIsDragging(false);\r\n      setDraggedEvent(null);\r\n    }\r\n  };\r\n\r\n  // Create a new event\r\n  const handleCreateEvent = () => {\r\n    const newEvent = {\r\n      id: Date.now(), // Temporary ID, will be replaced when saved to backend\r\n      ...newEventData,\r\n      position: newEventPosition,\r\n      conditions: [] // Initialize with empty conditions\r\n    };\r\n    \r\n    setEvents([...events, newEvent]);\r\n    setIsCreatingEvent(false);\r\n    setNewEventData({\r\n      title: '',\r\n      description: '',\r\n      location: '',\r\n      isPartyLocation: false,\r\n    });\r\n  };\r\n\r\n  // Update event\r\n  const handleUpdateEvent = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    setEvents(events.map(evt => \r\n      evt.id === selectedEvent.id \r\n        ? { ...selectedEvent } \r\n        : evt\r\n    ));\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Handle canvas click to deselect \r\n  const handleCanvasClick = () => {\r\n    // If in connection mode, cancel it\r\n    if (isCreatingConnection) {\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Cancel event creation\r\n  const handleCancelCreate = () => {\r\n    setIsCreatingEvent(false);\r\n  };\r\n\r\n  // Draw connections between events\r\n  const renderConnections = () => {\r\n    return connections.map((connection, index) => {\r\n      const fromEvent = events.find(e => e.id === connection.from);\r\n      const toEvent = events.find(e => e.id === connection.to);\r\n      \r\n      if (!fromEvent || !toEvent) return null;\r\n      \r\n      return (\r\n        <line\r\n          key={index}\r\n          x1={fromEvent.position.x + 75}\r\n          y1={fromEvent.position.y + 25}\r\n          x2={toEvent.position.x + 75}\r\n          y2={toEvent.position.y + 25}\r\n          stroke={connectionStart && connectionStart.id === fromEvent.id ? \"#3498db\" : \"#666\"}\r\n          strokeWidth=\"2\"\r\n          markerEnd=\"url(#arrowhead)\"\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"lore-map-container\">\r\n      <div \r\n        className=\"lore-map-canvas\" \r\n        ref={canvasRef}\r\n        onContextMenu={handleCanvasContextMenu}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onMouseLeave={handleMouseUp}\r\n        onClick={handleCanvasClick}\r\n      >\r\n        <svg width=\"100%\" height=\"100%\">\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"9\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n            >\r\n              <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#666\" />\r\n            </marker>\r\n          </defs>\r\n          {renderConnections()}\r\n          \r\n          {/* Show temp connection line when creating */}\r\n          {isCreatingConnection && connectionStart && (\r\n            <line\r\n              x1={connectionStart.position.x + 75}\r\n              y1={connectionStart.position.y + 25}\r\n              x2={isDragging ? draggedEvent.position.x + 75 : window.event?.clientX - canvasRef.current.getBoundingClientRect().left}\r\n              y2={isDragging ? draggedEvent.position.y + 25 : window.event?.clientY - canvasRef.current.getBoundingClientRect().top}\r\n              stroke=\"#3498db\"\r\n              strokeWidth=\"2\"\r\n              strokeDasharray=\"5,5\"\r\n            />\r\n          )}\r\n        </svg>\r\n        \r\n        {events.map(event => {\r\n          const isAccessible = checkEventConditions(event);\r\n          const isCompleted = eventStates[`event_${event.id}_completed`] || false;\r\n          \r\n          return (\r\n            <div\r\n              key={event.id}\r\n              className={`event-node \r\n                ${event.isPartyLocation ? 'party-location' : ''} \r\n                ${selectedEvent?.id === event.id ? 'selected' : ''} \r\n                ${connectionStart?.id === event.id ? 'connection-source' : ''}\r\n                ${!isAccessible ? 'conditional-locked' : ''}\r\n                ${isCompleted ? 'completed' : ''}\r\n              `}\r\n              style={{\r\n                left: `${event.position.x}px`,\r\n                top: `${event.position.y}px`,\r\n              }}\r\n              onClick={(e) => handleEventClick(event, e)}\r\n              onMouseDown={(e) => handleEventDragStart(e, event)}\r\n            >\r\n              <h3>{event.title}</h3>\r\n              <div className=\"event-location\">{event.location}</div>\r\n              \r\n              {/* Show condition indicators */}\r\n              {!isAccessible && (\r\n                <div className=\"condition-indicator locked\">🔒</div>\r\n              )}\r\n              {isCompleted && (\r\n                <div className=\"condition-indicator completed\">✓</div>\r\n              )}\r\n              {event.conditions && event.conditions.length > 0 && (\r\n                <div className=\"condition-indicator has-conditions\">⚙️</div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n        \r\n        {isCreatingConnection && (\r\n          <div className=\"connection-help-text\">\r\n            Click on another event to create a connection, or right-click to cancel.\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {selectedEvent && (\r\n        <div className=\"event-details-panel\">\r\n          <h3>\r\n            <input \r\n              type=\"text\" \r\n              value={selectedEvent.title}\r\n              onChange={(e) => setSelectedEvent({...selectedEvent, title: e.target.value})}\r\n            />\r\n          </h3>\r\n          <div className=\"form-group\">\r\n            <label>Location:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={selectedEvent.location}\r\n              onChange={(e) => setSelectedEvent({...selectedEvent, location: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <textarea \r\n              value={selectedEvent.description}\r\n              onChange={(e) => setSelectedEvent({...selectedEvent, description: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={selectedEvent.isPartyLocation}\r\n                onChange={(e) => setSelectedEvent({...selectedEvent, isPartyLocation: e.target.checked})}\r\n              />\r\n              Party is here\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={eventStates[`event_${selectedEvent.id}_completed`] || false}\r\n                onChange={() => toggleEventCompleted(selectedEvent.id)}\r\n              />\r\n              Mark as completed\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"event-characters\">\r\n            <h4>Characters Present</h4>\r\n            <div className=\"character-select\">\r\n              <select \r\n                value=\"\" \r\n                onChange={(e) => {\r\n                  if (e.target.value) handleAddCharacterToEvent(parseInt(e.target.value, 10));\r\n                }}\r\n              >\r\n                <option value=\"\">Add a character...</option>\r\n                {characters.map(char => (\r\n                  <option key={char.id} value={char.id}>{char.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"character-list\">\r\n              {eventCharacters.map(charId => {\r\n                const character = characters.find(c => c.id === charId);\r\n                if (!character) return null;\r\n                \r\n                return (\r\n                  <div key={charId} className=\"event-character-item\">\r\n                    <span>{character.name}</span>\r\n                    <span className=\"character-type-badge\">{character.character_type}</span>\r\n                    <button \r\n                      className=\"remove-character-btn\"\r\n                      onClick={() => handleRemoveCharacterFromEvent(charId)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Event Conditions Component */}\r\n          <EventConditions\r\n            conditions={selectedEvent.conditions || []}\r\n            onConditionsChange={handleConditionsChange}\r\n            availableEvents={events.filter(e => e.id !== selectedEvent.id)} // Don't include self\r\n            availableCharacters={characters}\r\n          />\r\n\r\n          {/* Character state management section */}\r\n          <div className=\"character-states\">\r\n            <h4>Character States</h4>\r\n            <div className=\"character-state-toggles\">\r\n              {characters.map(character => (\r\n                <div key={character.id} className=\"character-state-item\">\r\n                  <span className=\"character-name\">{character.name}</span>\r\n                  <div className=\"state-toggles\">\r\n                    <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={eventStates[`character_${character.id}_freed`] || false}\r\n                        onChange={() => toggleCharacterState(character.id, 'freed')}\r\n                      />\r\n                      Freed\r\n                    </label>\r\n                    <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={eventStates[`character_${character.id}_alive`] !== false}\r\n                        onChange={() => toggleCharacterState(character.id, 'alive')}\r\n                      />\r\n                      Alive\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"event-action-buttons\">\r\n            <button onClick={handleUpdateEvent}>Update Event</button>\r\n            <button onClick={handleAddConnection}>Add Connection</button>\r\n            <button className=\"delete-button\" onClick={handleDeleteEvent}>Delete Event</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {isCreatingEvent && (\r\n        <div className=\"create-event-modal\">\r\n          <h3>Create New Event</h3>\r\n          <div className=\"form-group\">\r\n            <label>Title:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={newEventData.title} \r\n              onChange={(e) => setNewEventData({...newEventData, title: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Location:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={newEventData.location} \r\n              onChange={(e) => setNewEventData({...newEventData, location: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <textarea \r\n              value={newEventData.description} \r\n              onChange={(e) => setNewEventData({...newEventData, description: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={newEventData.isPartyLocation} \r\n                onChange={(e) => setNewEventData({...newEventData, isPartyLocation: e.target.checked})}\r\n              />\r\n              Party is here\r\n            </label>\r\n          </div>\r\n          <div className=\"modal-actions\">\r\n            <button onClick={handleCreateEvent}>Create</button>\r\n            <button onClick={handleCancelCreate}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoreMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}