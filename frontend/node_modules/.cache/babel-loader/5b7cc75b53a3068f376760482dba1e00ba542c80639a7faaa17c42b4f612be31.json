{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\braed\\\\OneDrive\\\\Desktop\\\\LoreKeep\\\\frontend\\\\src\\\\components\\\\LoreMap\\\\LoreMap.jsx\",\n  _s = $RefreshSig$();\n// LoreMap.jsx - Updated with single click to highlight, double click to edit\nimport React, { useState, useEffect, useRef } from 'react';\nimport './LoreMap.css';\nimport EventConditions from './EventConditions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoreMap = ({\n  initialEvents,\n  initialConnections,\n  onChange,\n  loreMapId\n}) => {\n  _s();\n  const [events, setEvents] = useState(initialEvents || []);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [isCreatingEvent, setIsCreatingEvent] = useState(false);\n  const [newEventPosition, setNewEventPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [newEventData, setNewEventData] = useState({\n    title: '',\n    description: '',\n    location: '',\n    isPartyLocation: false\n  });\n  const [connections, setConnections] = useState(initialConnections || []);\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggedEvent, setDraggedEvent] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isCreatingConnection, setIsCreatingConnection] = useState(false);\n  const [connectionStart, setConnectionStart] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [eventCharacters, setEventCharacters] = useState([]);\n  const [eventStates, setEventStates] = useState({});\n  const [battleMapFile, setBattleMapFile] = useState(null);\n  const [battleMapPreview, setBattleMapPreview] = useState(null);\n  const canvasRef = useRef(null);\n\n  // Update parent component when data changes\n  useEffect(() => {\n    if (onChange) {\n      onChange({\n        id: loreMapId,\n        events: events,\n        connections: connections\n      });\n    }\n  }, [events, connections, onChange, loreMapId]);\n\n  // Initialize from props\n  useEffect(() => {\n    if (initialEvents && initialEvents.length > 0) {\n      setEvents(initialEvents);\n    }\n    if (initialConnections && initialConnections.length > 0) {\n      setConnections(initialConnections);\n    }\n  }, [initialEvents, initialConnections]);\n\n  // Fetch characters\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/characters', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setCharacters(data);\n        }\n      } catch (err) {\n        console.error('Failed to fetch characters:', err);\n      }\n    };\n    fetchCharacters();\n  }, []);\n\n  // Fetch event characters when editing an event\n  useEffect(() => {\n    if (editingEvent && editingEvent.id) {\n      const fetchEventCharacters = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/events/${editingEvent.id}/characters`, {\n            method: 'GET',\n            credentials: 'include'\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setEventCharacters(data.map(ec => ec.character_id));\n          }\n        } catch (err) {\n          console.error('Failed to fetch event characters:', err);\n        }\n      };\n      fetchEventCharacters();\n    } else {\n      setEventCharacters([]);\n    }\n  }, [editingEvent]);\n\n  // Check if event conditions are met\n  const checkEventConditions = event => {\n    if (!event.conditions || event.conditions.length === 0) {\n      return true;\n    }\n    return event.conditions.every(condition => {\n      switch (condition.type) {\n        case 'event_completed':\n          const isCompleted = eventStates[`event_${condition.target}_completed`] || false;\n          return condition.required ? isCompleted : !isCompleted;\n        case 'character_freed':\n          const isFreed = eventStates[`character_${condition.target}_freed`] || false;\n          return condition.required ? isFreed : !isFreed;\n        case 'character_alive':\n          const isAlive = eventStates[`character_${condition.target}_alive`] !== false;\n          return condition.required ? isAlive : !isAlive;\n        case 'custom':\n          const customState = eventStates[`custom_${condition.id}`] || false;\n          return condition.required ? customState : !customState;\n        default:\n          return true;\n      }\n    });\n  };\n\n  // Toggle event completion state\n  const toggleEventCompleted = eventId => {\n    const key = `event_${eventId}_completed`;\n    setEventStates(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n\n  // Handle single click - just select/highlight\n  const handleEventClick = (event, e) => {\n    e.stopPropagation();\n\n    // If in connection creation mode, complete the connection\n    if (isCreatingConnection && connectionStart && connectionStart.id !== event.id) {\n      const newConnection = {\n        id: Date.now(),\n        from: connectionStart.id,\n        to: event.id,\n        description: ''\n      };\n      setConnections([...connections, newConnection]);\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    setSelectedEvent(event);\n  };\n\n  // Handle double click - open edit modal\n  const handleEventDoubleClick = (event, e) => {\n    e.stopPropagation();\n    if (isCreatingConnection) return; // Don't open edit in connection mode\n\n    // Parse the stats if it's a string\n    const eventToEdit = {\n      ...event,\n      conditions: event.conditions || []\n    };\n    setEditingEvent(eventToEdit);\n    setBattleMapFile(null);\n    setBattleMapPreview(event.battle_map_url || null);\n  };\n\n  // Handle battle map file upload\n  const handleBattleMapUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setBattleMapFile(file);\n\n      // Create preview\n      const reader = new FileReader();\n      reader.onload = e => {\n        setBattleMapPreview(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Remove battle map\n  const handleRemoveBattleMap = () => {\n    setBattleMapFile(null);\n    setBattleMapPreview(null);\n    if (editingEvent) {\n      setEditingEvent({\n        ...editingEvent,\n        battle_map_url: null\n      });\n    }\n  };\n\n  // Handle conditions change for editing event\n  const handleConditionsChange = newConditions => {\n    if (!editingEvent) return;\n    setEditingEvent({\n      ...editingEvent,\n      conditions: newConditions\n    });\n  };\n\n  // Add character to event\n  const handleAddCharacterToEvent = async characterId => {\n    if (!editingEvent || !characterId || eventCharacters.includes(characterId)) return;\n    try {\n      if (editingEvent.id && editingEvent.id <= 1000000) {\n        const response = await fetch(`http://localhost:5000/api/events/${editingEvent.id}/characters`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            character_id: characterId,\n            role: 'present'\n          })\n        });\n        if (response.ok) {\n          setEventCharacters([...eventCharacters, characterId]);\n        }\n      } else {\n        // For new events, just add to local state\n        setEventCharacters([...eventCharacters, characterId]);\n      }\n    } catch (err) {\n      console.error('Failed to add character to event:', err);\n    }\n  };\n\n  // Remove character from event\n  const handleRemoveCharacterFromEvent = async characterId => {\n    if (!editingEvent) return;\n    try {\n      if (editingEvent.id && editingEvent.id <= 1000000) {\n        const response = await fetch(`http://localhost:5000/api/events/${editingEvent.id}/characters/${characterId}`, {\n          method: 'DELETE',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          setEventCharacters(eventCharacters.filter(id => id !== characterId));\n        }\n      } else {\n        // For new events, just remove from local state\n        setEventCharacters(eventCharacters.filter(id => id !== characterId));\n      }\n    } catch (err) {\n      console.error('Failed to remove character from event:', err);\n    }\n  };\n\n  // Save event changes\n  const handleSaveEvent = () => {\n    if (!editingEvent) return;\n\n    // Update the event in the events array\n    setEvents(events.map(evt => evt.id === editingEvent.id ? editingEvent : evt));\n\n    // If it's a selected event, update that too\n    if (selectedEvent && selectedEvent.id === editingEvent.id) {\n      setSelectedEvent(editingEvent);\n    }\n    setEditingEvent(null);\n    setBattleMapFile(null);\n    setBattleMapPreview(null);\n  };\n\n  // Cancel event editing\n  const handleCancelEdit = () => {\n    setEditingEvent(null);\n    setBattleMapFile(null);\n    setBattleMapPreview(null);\n    setEventCharacters([]);\n  };\n\n  // Start creating a connection\n  const handleAddConnection = () => {\n    if (!selectedEvent) return;\n    setIsCreatingConnection(true);\n    setConnectionStart(selectedEvent);\n    setSelectedEvent(null);\n  };\n\n  // Delete an event\n  const handleDeleteEvent = () => {\n    if (!selectedEvent) return;\n    if (!window.confirm(`Are you sure you want to delete \"${selectedEvent.title}\"?`)) {\n      return;\n    }\n\n    // Remove the event\n    setEvents(events.filter(e => e.id !== selectedEvent.id));\n\n    // Remove connections to/from this event\n    setConnections(connections.filter(c => c.from !== selectedEvent.id && c.to !== selectedEvent.id));\n    setSelectedEvent(null);\n  };\n\n  // Canvas right-click for new event\n  const handleCanvasContextMenu = e => {\n    e.preventDefault();\n    if (isCreatingConnection) {\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setNewEventPosition({\n      x,\n      y\n    });\n    setIsCreatingEvent(true);\n  };\n\n  // Handle event drag start\n  const handleEventDragStart = (e, event) => {\n    e.stopPropagation();\n    if (isCreatingConnection) return;\n    setIsDragging(true);\n    setDraggedEvent(event);\n    const rect = e.currentTarget.getBoundingClientRect();\n    setDragOffset({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n\n  // Handle mouse move for dragging\n  const handleMouseMove = e => {\n    if (isDragging && draggedEvent) {\n      const rect = canvasRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left - dragOffset.x;\n      const y = e.clientY - rect.top - dragOffset.y;\n      setEvents(events.map(evt => evt.id === draggedEvent.id ? {\n        ...evt,\n        position: {\n          x,\n          y\n        }\n      } : evt));\n    }\n  };\n\n  // Handle mouse up to stop dragging\n  const handleMouseUp = () => {\n    if (isDragging) {\n      setIsDragging(false);\n      setDraggedEvent(null);\n    }\n  };\n\n  // Create a new event\n  const handleCreateEvent = () => {\n    const newEvent = {\n      id: Date.now(),\n      ...newEventData,\n      position: newEventPosition,\n      conditions: []\n    };\n    setEvents([...events, newEvent]);\n    setIsCreatingEvent(false);\n    setNewEventData({\n      title: '',\n      description: '',\n      location: '',\n      isPartyLocation: false\n    });\n  };\n\n  // Handle canvas click to deselect \n  const handleCanvasClick = () => {\n    if (isCreatingConnection) {\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    setSelectedEvent(null);\n  };\n\n  // Cancel event creation\n  const handleCancelCreate = () => {\n    setIsCreatingEvent(false);\n  };\n\n  // Draw connections between events\n  const renderConnections = () => {\n    return connections.map((connection, index) => {\n      const fromEvent = events.find(e => e.id === connection.from);\n      const toEvent = events.find(e => e.id === connection.to);\n      if (!fromEvent || !toEvent) return null;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: fromEvent.position.x + 75,\n        y1: fromEvent.position.y + 25,\n        x2: toEvent.position.x + 75,\n        y2: toEvent.position.y + 25,\n        stroke: connectionStart && connectionStart.id === fromEvent.id ? \"#3498db\" : \"#8b4513\",\n        strokeWidth: \"2\",\n        markerEnd: \"url(#arrowhead)\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Get character names for display\n  const getCharacterNames = characterIds => {\n    return characterIds.map(id => {\n      var _characters$find;\n      return (_characters$find = characters.find(c => c.id === id)) === null || _characters$find === void 0 ? void 0 : _characters$find.name;\n    }).filter(name => name).join(', ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lore-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lore-map-canvas\",\n      ref: canvasRef,\n      onContextMenu: handleCanvasContextMenu,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      onClick: handleCanvasClick,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"100%\",\n        height: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"arrowhead\",\n            markerWidth: \"10\",\n            markerHeight: \"7\",\n            refX: \"9\",\n            refY: \"3.5\",\n            orient: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"0 0, 10 3.5, 0 7\",\n              fill: \"#8b4513\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), renderConnections()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), events.map(event => {\n        const isAccessible = checkEventConditions(event);\n        const isCompleted = eventStates[`event_${event.id}_completed`] || false;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `event-node \n                ${event.isPartyLocation ? 'party-location' : ''} \n                ${(selectedEvent === null || selectedEvent === void 0 ? void 0 : selectedEvent.id) === event.id ? 'selected' : ''} \n                ${(connectionStart === null || connectionStart === void 0 ? void 0 : connectionStart.id) === event.id ? 'connection-source' : ''}\n                ${!isAccessible ? 'conditional-locked' : ''}\n                ${isCompleted ? 'completed' : ''}\n              `,\n          style: {\n            left: `${event.position.x}px`,\n            top: `${event.position.y}px`\n          },\n          onClick: e => handleEventClick(event, e),\n          onDoubleClick: e => handleEventDoubleClick(event, e),\n          onMouseDown: e => handleEventDragStart(e, event),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-location\",\n            children: event.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), !isAccessible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator locked\",\n            children: \"\\uD83D\\uDD12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }, this), isCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator completed\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 17\n          }, this), event.conditions && event.conditions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator has-conditions\",\n            children: \"\\u2699\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 17\n          }, this), event.battle_map_url && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator has-map\",\n            children: \"\\uD83D\\uDDFA\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 17\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this);\n      }), isCreatingConnection && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-help-text\",\n        children: \"Click on another event to create a connection, or right-click to cancel.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), selectedEvent && !editingEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-selection-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedEvent.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedEvent.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEventDoubleClick(selectedEvent, {\n            stopPropagation: () => {}\n          }),\n          children: \"Edit Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddConnection,\n          children: \"Add Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteEvent,\n          className: \"delete-button\",\n          children: \"Delete Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleEventCompleted(selectedEvent.id),\n          children: eventStates[`event_${selectedEvent.id}_completed`] ? 'Mark Incomplete' : 'Mark Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }, this), editingEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-edit-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-edit-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-edit-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close-btn\",\n            onClick: handleCancelEdit,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-edit-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-edit-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editingEvent.title,\n                onChange: e => setEditingEvent({\n                  ...editingEvent,\n                  title: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editingEvent.location,\n                onChange: e => setEditingEvent({\n                  ...editingEvent,\n                  location: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: editingEvent.description,\n                onChange: e => setEditingEvent({\n                  ...editingEvent,\n                  description: e.target.value\n                }),\n                rows: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: editingEvent.isPartyLocation,\n                  onChange: e => setEditingEvent({\n                    ...editingEvent,\n                    isPartyLocation: e.target.checked\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 21\n                }, this), \"Party is currently here\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: eventStates[`event_${editingEvent.id}_completed`] || false,\n                  onChange: () => toggleEventCompleted(editingEvent.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this), \"Mark as completed\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"characters-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Characters Present\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"character-select\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: \"\",\n                  onChange: e => {\n                    if (e.target.value) handleAddCharacterToEvent(parseInt(e.target.value, 10));\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Add a character...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 23\n                  }, this), characters.filter(char => !eventCharacters.includes(char.id)).map(char => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: char.id,\n                    children: [char.name, \" (\", char.character_type, \")\"]\n                  }, char.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"character-list\",\n                children: eventCharacters.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"no-characters\",\n                  children: \"No characters assigned to this event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"character-name-list\",\n                  children: eventCharacters.map(charId => {\n                    const character = characters.find(c => c.id === charId);\n                    if (!character) return null;\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"character-list-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"character-name\",\n                        children: character.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 631,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"character-type\",\n                        children: [\"(\", character.character_type, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 632,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"remove-character-btn\",\n                        onClick: () => handleRemoveCharacterFromEvent(charId),\n                        title: \"Remove character\",\n                        children: \"\\xD7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 633,\n                        columnNumber: 31\n                      }, this)]\n                    }, charId, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-edit-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-map-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Battle Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-map-upload\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"battle-map-input\",\n                  accept: \"image/*\",\n                  onChange: handleBattleMapUpload,\n                  style: {\n                    display: 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"battle-map-input\",\n                  className: \"upload-btn\",\n                  children: \"Choose Battle Map Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }, this), battleMapPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-map-preview\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: battleMapPreview,\n                  alt: \"Battle Map Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"remove-map-btn\",\n                  onClick: handleRemoveBattleMap,\n                  children: \"Remove Map\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(EventConditions, {\n              conditions: editingEvent.conditions || [],\n              onConditionsChange: handleConditionsChange,\n              availableEvents: events.filter(e => e.id !== editingEvent.id),\n              availableCharacters: characters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-edit-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveEvent,\n            className: \"save-btn\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            className: \"cancel-btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 9\n    }, this), isCreatingEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-event-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newEventData.title,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newEventData.location,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newEventData.description,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: newEventData.isPartyLocation,\n            onChange: e => setNewEventData({\n              ...newEventData,\n              isPartyLocation: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 15\n          }, this), \"Party is here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateEvent,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelCreate,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 5\n  }, this);\n};\n_s(LoreMap, \"7/s/+kDNb4ALE+rS0m0lg9Bs+ig=\");\n_c = LoreMap;\nexport default LoreMap;\nvar _c;\n$RefreshReg$(_c, \"LoreMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","EventConditions","jsxDEV","_jsxDEV","LoreMap","initialEvents","initialConnections","onChange","loreMapId","_s","events","setEvents","selectedEvent","setSelectedEvent","editingEvent","setEditingEvent","isCreatingEvent","setIsCreatingEvent","newEventPosition","setNewEventPosition","x","y","newEventData","setNewEventData","title","description","location","isPartyLocation","connections","setConnections","isDragging","setIsDragging","draggedEvent","setDraggedEvent","dragOffset","setDragOffset","isCreatingConnection","setIsCreatingConnection","connectionStart","setConnectionStart","characters","setCharacters","eventCharacters","setEventCharacters","eventStates","setEventStates","battleMapFile","setBattleMapFile","battleMapPreview","setBattleMapPreview","canvasRef","id","length","fetchCharacters","response","fetch","method","credentials","ok","data","json","err","console","error","fetchEventCharacters","map","ec","character_id","checkEventConditions","event","conditions","every","condition","type","isCompleted","target","required","isFreed","isAlive","customState","toggleEventCompleted","eventId","key","prev","handleEventClick","e","stopPropagation","newConnection","Date","now","from","to","handleEventDoubleClick","eventToEdit","battle_map_url","handleBattleMapUpload","file","files","reader","FileReader","onload","result","readAsDataURL","handleRemoveBattleMap","handleConditionsChange","newConditions","handleAddCharacterToEvent","characterId","includes","headers","body","JSON","stringify","role","handleRemoveCharacterFromEvent","filter","handleSaveEvent","evt","handleCancelEdit","handleAddConnection","handleDeleteEvent","window","confirm","c","handleCanvasContextMenu","preventDefault","rect","current","getBoundingClientRect","clientX","left","clientY","top","handleEventDragStart","currentTarget","handleMouseMove","position","handleMouseUp","handleCreateEvent","newEvent","handleCanvasClick","handleCancelCreate","renderConnections","connection","index","fromEvent","find","toEvent","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","getCharacterNames","characterIds","_characters$find","name","join","className","children","ref","onContextMenu","onMouseMove","onMouseUp","onMouseLeave","onClick","width","height","markerWidth","markerHeight","refX","refY","orient","points","fill","isAccessible","style","onDoubleClick","onMouseDown","value","rows","checked","parseInt","char","character_type","charId","character","accept","display","htmlFor","src","alt","onConditionsChange","availableEvents","availableCharacters","_c","$RefreshReg$"],"sources":["C:/Users/braed/OneDrive/Desktop/LoreKeep/frontend/src/components/LoreMap/LoreMap.jsx"],"sourcesContent":["// LoreMap.jsx - Updated with single click to highlight, double click to edit\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './LoreMap.css';\r\nimport EventConditions from './EventConditions';\r\n\r\nconst LoreMap = ({ initialEvents, initialConnections, onChange, loreMapId }) => {\r\n  const [events, setEvents] = useState(initialEvents || []);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [editingEvent, setEditingEvent] = useState(null);\r\n  const [isCreatingEvent, setIsCreatingEvent] = useState(false);\r\n  const [newEventPosition, setNewEventPosition] = useState({ x: 0, y: 0 });\r\n  const [newEventData, setNewEventData] = useState({\r\n    title: '',\r\n    description: '',\r\n    location: '',\r\n    isPartyLocation: false,\r\n  });\r\n  const [connections, setConnections] = useState(initialConnections || []);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [draggedEvent, setDraggedEvent] = useState(null);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [isCreatingConnection, setIsCreatingConnection] = useState(false);\r\n  const [connectionStart, setConnectionStart] = useState(null);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [eventCharacters, setEventCharacters] = useState([]);\r\n  const [eventStates, setEventStates] = useState({});\r\n  const [battleMapFile, setBattleMapFile] = useState(null);\r\n  const [battleMapPreview, setBattleMapPreview] = useState(null);\r\n  \r\n  const canvasRef = useRef(null);\r\n\r\n  // Update parent component when data changes\r\n  useEffect(() => {\r\n    if (onChange) {\r\n      onChange({\r\n        id: loreMapId,\r\n        events: events,\r\n        connections: connections\r\n      });\r\n    }\r\n  }, [events, connections, onChange, loreMapId]);\r\n\r\n  // Initialize from props\r\n  useEffect(() => {\r\n    if (initialEvents && initialEvents.length > 0) {\r\n      setEvents(initialEvents);\r\n    }\r\n    if (initialConnections && initialConnections.length > 0) {\r\n      setConnections(initialConnections);\r\n    }\r\n  }, [initialEvents, initialConnections]);\r\n\r\n  // Fetch characters\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/characters', {\r\n          method: 'GET',\r\n          credentials: 'include'\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setCharacters(data);\r\n        }\r\n      } catch (err) {\r\n        console.error('Failed to fetch characters:', err);\r\n      }\r\n    };\r\n    \r\n    fetchCharacters();\r\n  }, []);\r\n\r\n  // Fetch event characters when editing an event\r\n  useEffect(() => {\r\n    if (editingEvent && editingEvent.id) {\r\n      const fetchEventCharacters = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/events/${editingEvent.id}/characters`, {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n          });\r\n          \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setEventCharacters(data.map(ec => ec.character_id));\r\n          }\r\n        } catch (err) {\r\n          console.error('Failed to fetch event characters:', err);\r\n        }\r\n      };\r\n      \r\n      fetchEventCharacters();\r\n    } else {\r\n      setEventCharacters([]);\r\n    }\r\n  }, [editingEvent]);\r\n\r\n  // Check if event conditions are met\r\n  const checkEventConditions = (event) => {\r\n    if (!event.conditions || event.conditions.length === 0) {\r\n      return true;\r\n    }\r\n    \r\n    return event.conditions.every(condition => {\r\n      switch (condition.type) {\r\n        case 'event_completed':\r\n          const isCompleted = eventStates[`event_${condition.target}_completed`] || false;\r\n          return condition.required ? isCompleted : !isCompleted;\r\n          \r\n        case 'character_freed':\r\n          const isFreed = eventStates[`character_${condition.target}_freed`] || false;\r\n          return condition.required ? isFreed : !isFreed;\r\n          \r\n        case 'character_alive':\r\n          const isAlive = eventStates[`character_${condition.target}_alive`] !== false;\r\n          return condition.required ? isAlive : !isAlive;\r\n          \r\n        case 'custom':\r\n          const customState = eventStates[`custom_${condition.id}`] || false;\r\n          return condition.required ? customState : !customState;\r\n          \r\n        default:\r\n          return true;\r\n      }\r\n    });\r\n  };\r\n\r\n  // Toggle event completion state\r\n  const toggleEventCompleted = (eventId) => {\r\n    const key = `event_${eventId}_completed`;\r\n    setEventStates(prev => ({\r\n      ...prev,\r\n      [key]: !prev[key]\r\n    }));\r\n  };\r\n\r\n  // Handle single click - just select/highlight\r\n  const handleEventClick = (event, e) => {\r\n    e.stopPropagation();\r\n    \r\n    // If in connection creation mode, complete the connection\r\n    if (isCreatingConnection && connectionStart && connectionStart.id !== event.id) {\r\n      const newConnection = {\r\n        id: Date.now(),\r\n        from: connectionStart.id,\r\n        to: event.id,\r\n        description: ''\r\n      };\r\n      \r\n      setConnections([...connections, newConnection]);\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    setSelectedEvent(event);\r\n  };\r\n\r\n  // Handle double click - open edit modal\r\n  const handleEventDoubleClick = (event, e) => {\r\n    e.stopPropagation();\r\n    \r\n    if (isCreatingConnection) return; // Don't open edit in connection mode\r\n    \r\n    // Parse the stats if it's a string\r\n    const eventToEdit = {\r\n      ...event,\r\n      conditions: event.conditions || []\r\n    };\r\n    \r\n    setEditingEvent(eventToEdit);\r\n    setBattleMapFile(null);\r\n    setBattleMapPreview(event.battle_map_url || null);\r\n  };\r\n\r\n  // Handle battle map file upload\r\n  const handleBattleMapUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setBattleMapFile(file);\r\n      \r\n      // Create preview\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setBattleMapPreview(e.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Remove battle map\r\n  const handleRemoveBattleMap = () => {\r\n    setBattleMapFile(null);\r\n    setBattleMapPreview(null);\r\n    if (editingEvent) {\r\n      setEditingEvent({\r\n        ...editingEvent,\r\n        battle_map_url: null\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle conditions change for editing event\r\n  const handleConditionsChange = (newConditions) => {\r\n    if (!editingEvent) return;\r\n    \r\n    setEditingEvent({\r\n      ...editingEvent,\r\n      conditions: newConditions\r\n    });\r\n  };\r\n\r\n  // Add character to event\r\n  const handleAddCharacterToEvent = async (characterId) => {\r\n    if (!editingEvent || !characterId || eventCharacters.includes(characterId)) return;\r\n    \r\n    try {\r\n      if (editingEvent.id && editingEvent.id <= 1000000) {\r\n        const response = await fetch(`http://localhost:5000/api/events/${editingEvent.id}/characters`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify({\r\n            character_id: characterId,\r\n            role: 'present'\r\n          })\r\n        });\r\n        \r\n        if (response.ok) {\r\n          setEventCharacters([...eventCharacters, characterId]);\r\n        }\r\n      } else {\r\n        // For new events, just add to local state\r\n        setEventCharacters([...eventCharacters, characterId]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to add character to event:', err);\r\n    }\r\n  };\r\n\r\n  // Remove character from event\r\n  const handleRemoveCharacterFromEvent = async (characterId) => {\r\n    if (!editingEvent) return;\r\n    \r\n    try {\r\n      if (editingEvent.id && editingEvent.id <= 1000000) {\r\n        const response = await fetch(`http://localhost:5000/api/events/${editingEvent.id}/characters/${characterId}`, {\r\n          method: 'DELETE',\r\n          credentials: 'include'\r\n        });\r\n        \r\n        if (response.ok) {\r\n          setEventCharacters(eventCharacters.filter(id => id !== characterId));\r\n        }\r\n      } else {\r\n        // For new events, just remove from local state\r\n        setEventCharacters(eventCharacters.filter(id => id !== characterId));\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to remove character from event:', err);\r\n    }\r\n  };\r\n\r\n  // Save event changes\r\n  const handleSaveEvent = () => {\r\n    if (!editingEvent) return;\r\n    \r\n    // Update the event in the events array\r\n    setEvents(events.map(evt => \r\n      evt.id === editingEvent.id ? editingEvent : evt\r\n    ));\r\n    \r\n    // If it's a selected event, update that too\r\n    if (selectedEvent && selectedEvent.id === editingEvent.id) {\r\n      setSelectedEvent(editingEvent);\r\n    }\r\n    \r\n    setEditingEvent(null);\r\n    setBattleMapFile(null);\r\n    setBattleMapPreview(null);\r\n  };\r\n\r\n  // Cancel event editing\r\n  const handleCancelEdit = () => {\r\n    setEditingEvent(null);\r\n    setBattleMapFile(null);\r\n    setBattleMapPreview(null);\r\n    setEventCharacters([]);\r\n  };\r\n\r\n  // Start creating a connection\r\n  const handleAddConnection = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    setIsCreatingConnection(true);\r\n    setConnectionStart(selectedEvent);\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Delete an event\r\n  const handleDeleteEvent = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    if (!window.confirm(`Are you sure you want to delete \"${selectedEvent.title}\"?`)) {\r\n      return;\r\n    }\r\n    \r\n    // Remove the event\r\n    setEvents(events.filter(e => e.id !== selectedEvent.id));\r\n    \r\n    // Remove connections to/from this event\r\n    setConnections(connections.filter(\r\n      c => c.from !== selectedEvent.id && c.to !== selectedEvent.id\r\n    ));\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Canvas right-click for new event\r\n  const handleCanvasContextMenu = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (isCreatingConnection) {\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    setNewEventPosition({ x, y });\r\n    setIsCreatingEvent(true);\r\n  };\r\n\r\n  // Handle event drag start\r\n  const handleEventDragStart = (e, event) => {\r\n    e.stopPropagation();\r\n    \r\n    if (isCreatingConnection) return;\r\n    \r\n    setIsDragging(true);\r\n    setDraggedEvent(event);\r\n    \r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    setDragOffset({\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top,\r\n    });\r\n  };\r\n\r\n  // Handle mouse move for dragging\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && draggedEvent) {\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - dragOffset.x;\r\n      const y = e.clientY - rect.top - dragOffset.y;\r\n      \r\n      setEvents(events.map(evt => \r\n        evt.id === draggedEvent.id \r\n          ? { ...evt, position: { x, y } } \r\n          : evt\r\n      ));\r\n    }\r\n  };\r\n\r\n  // Handle mouse up to stop dragging\r\n  const handleMouseUp = () => {\r\n    if (isDragging) {\r\n      setIsDragging(false);\r\n      setDraggedEvent(null);\r\n    }\r\n  };\r\n\r\n  // Create a new event\r\n  const handleCreateEvent = () => {\r\n    const newEvent = {\r\n      id: Date.now(),\r\n      ...newEventData,\r\n      position: newEventPosition,\r\n      conditions: []\r\n    };\r\n    \r\n    setEvents([...events, newEvent]);\r\n    setIsCreatingEvent(false);\r\n    setNewEventData({\r\n      title: '',\r\n      description: '',\r\n      location: '',\r\n      isPartyLocation: false,\r\n    });\r\n  };\r\n\r\n  // Handle canvas click to deselect \r\n  const handleCanvasClick = () => {\r\n    if (isCreatingConnection) {\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Cancel event creation\r\n  const handleCancelCreate = () => {\r\n    setIsCreatingEvent(false);\r\n  };\r\n\r\n  // Draw connections between events\r\n  const renderConnections = () => {\r\n    return connections.map((connection, index) => {\r\n      const fromEvent = events.find(e => e.id === connection.from);\r\n      const toEvent = events.find(e => e.id === connection.to);\r\n      \r\n      if (!fromEvent || !toEvent) return null;\r\n      \r\n      return (\r\n        <line\r\n          key={index}\r\n          x1={fromEvent.position.x + 75}\r\n          y1={fromEvent.position.y + 25}\r\n          x2={toEvent.position.x + 75}\r\n          y2={toEvent.position.y + 25}\r\n          stroke={connectionStart && connectionStart.id === fromEvent.id ? \"#3498db\" : \"#8b4513\"}\r\n          strokeWidth=\"2\"\r\n          markerEnd=\"url(#arrowhead)\"\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  // Get character names for display\r\n  const getCharacterNames = (characterIds) => {\r\n    return characterIds\r\n      .map(id => characters.find(c => c.id === id)?.name)\r\n      .filter(name => name)\r\n      .join(', ');\r\n  };\r\n\r\n  return (\r\n    <div className=\"lore-map-container\">\r\n      <div \r\n        className=\"lore-map-canvas\" \r\n        ref={canvasRef}\r\n        onContextMenu={handleCanvasContextMenu}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onMouseLeave={handleMouseUp}\r\n        onClick={handleCanvasClick}\r\n      >\r\n        <svg width=\"100%\" height=\"100%\">\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"9\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n            >\r\n              <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#8b4513\" />\r\n            </marker>\r\n          </defs>\r\n          {renderConnections()}\r\n        </svg>\r\n        \r\n        {events.map(event => {\r\n          const isAccessible = checkEventConditions(event);\r\n          const isCompleted = eventStates[`event_${event.id}_completed`] || false;\r\n          \r\n          return (\r\n            <div\r\n              key={event.id}\r\n              className={`event-node \r\n                ${event.isPartyLocation ? 'party-location' : ''} \r\n                ${selectedEvent?.id === event.id ? 'selected' : ''} \r\n                ${connectionStart?.id === event.id ? 'connection-source' : ''}\r\n                ${!isAccessible ? 'conditional-locked' : ''}\r\n                ${isCompleted ? 'completed' : ''}\r\n              `}\r\n              style={{\r\n                left: `${event.position.x}px`,\r\n                top: `${event.position.y}px`,\r\n              }}\r\n              onClick={(e) => handleEventClick(event, e)}\r\n              onDoubleClick={(e) => handleEventDoubleClick(event, e)}\r\n              onMouseDown={(e) => handleEventDragStart(e, event)}\r\n            >\r\n              <h3>{event.title}</h3>\r\n              <div className=\"event-location\">{event.location}</div>\r\n              \r\n              {/* Show condition indicators */}\r\n              {!isAccessible && (\r\n                <div className=\"condition-indicator locked\">🔒</div>\r\n              )}\r\n              {isCompleted && (\r\n                <div className=\"condition-indicator completed\">✓</div>\r\n              )}\r\n              {event.conditions && event.conditions.length > 0 && (\r\n                <div className=\"condition-indicator has-conditions\">⚙️</div>\r\n              )}\r\n              {event.battle_map_url && (\r\n                <div className=\"condition-indicator has-map\">🗺️</div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n        \r\n        {isCreatingConnection && (\r\n          <div className=\"connection-help-text\">\r\n            Click on another event to create a connection, or right-click to cancel.\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Simple selection panel - only shows when event is selected but not editing */}\r\n      {selectedEvent && !editingEvent && (\r\n        <div className=\"event-selection-panel\">\r\n          <h3>{selectedEvent.title}</h3>\r\n          <p>{selectedEvent.location}</p>\r\n          <div className=\"selection-actions\">\r\n            <button onClick={() => handleEventDoubleClick(selectedEvent, { stopPropagation: () => {} })}>\r\n              Edit Event\r\n            </button>\r\n            <button onClick={handleAddConnection}>Add Connection</button>\r\n            <button onClick={handleDeleteEvent} className=\"delete-button\">\r\n              Delete Event\r\n            </button>\r\n            <button onClick={() => toggleEventCompleted(selectedEvent.id)}>\r\n              {eventStates[`event_${selectedEvent.id}_completed`] ? 'Mark Incomplete' : 'Mark Complete'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Event editing modal */}\r\n      {editingEvent && (\r\n        <div className=\"event-edit-modal-overlay\">\r\n          <div className=\"event-edit-modal\">\r\n            <div className=\"event-edit-header\">\r\n              <h2>Edit Event</h2>\r\n              <button className=\"modal-close-btn\" onClick={handleCancelEdit}>×</button>\r\n            </div>\r\n            \r\n            <div className=\"event-edit-content\">\r\n              <div className=\"event-edit-left\">\r\n                <div className=\"form-group\">\r\n                  <label>Event Title:</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={editingEvent.title}\r\n                    onChange={(e) => setEditingEvent({...editingEvent, title: e.target.value})}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Location:</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={editingEvent.location}\r\n                    onChange={(e) => setEditingEvent({...editingEvent, location: e.target.value})}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Description:</label>\r\n                  <textarea \r\n                    value={editingEvent.description}\r\n                    onChange={(e) => setEditingEvent({...editingEvent, description: e.target.value})}\r\n                    rows=\"6\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group checkbox-group\">\r\n                  <label>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      checked={editingEvent.isPartyLocation}\r\n                      onChange={(e) => setEditingEvent({...editingEvent, isPartyLocation: e.target.checked})}\r\n                    />\r\n                    Party is currently here\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"form-group checkbox-group\">\r\n                  <label>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      checked={eventStates[`event_${editingEvent.id}_completed`] || false}\r\n                      onChange={() => toggleEventCompleted(editingEvent.id)}\r\n                    />\r\n                    Mark as completed\r\n                  </label>\r\n                </div>\r\n                \r\n                {/* Characters Section */}\r\n                <div className=\"characters-section\">\r\n                  <h3>Characters Present</h3>\r\n                  <div className=\"character-select\">\r\n                    <select \r\n                      value=\"\" \r\n                      onChange={(e) => {\r\n                        if (e.target.value) handleAddCharacterToEvent(parseInt(e.target.value, 10));\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Add a character...</option>\r\n                      {characters\r\n                        .filter(char => !eventCharacters.includes(char.id))\r\n                        .map(char => (\r\n                          <option key={char.id} value={char.id}>{char.name} ({char.character_type})</option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div className=\"character-list\">\r\n                    {eventCharacters.length === 0 ? (\r\n                      <p className=\"no-characters\">No characters assigned to this event</p>\r\n                    ) : (\r\n                      <ul className=\"character-name-list\">\r\n                        {eventCharacters.map(charId => {\r\n                          const character = characters.find(c => c.id === charId);\r\n                          if (!character) return null;\r\n                          \r\n                          return (\r\n                            <li key={charId} className=\"character-list-item\">\r\n                              <span className=\"character-name\">{character.name}</span>\r\n                              <span className=\"character-type\">({character.character_type})</span>\r\n                              <button \r\n                                className=\"remove-character-btn\"\r\n                                onClick={() => handleRemoveCharacterFromEvent(charId)}\r\n                                title=\"Remove character\"\r\n                              >\r\n                                ×\r\n                              </button>\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"event-edit-right\">\r\n                {/* Battle Map Section */}\r\n                <div className=\"battle-map-section\">\r\n                  <h3>Battle Map</h3>\r\n                  <div className=\"battle-map-upload\">\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"battle-map-input\"\r\n                      accept=\"image/*\"\r\n                      onChange={handleBattleMapUpload}\r\n                      style={{ display: 'none' }}\r\n                    />\r\n                    <label htmlFor=\"battle-map-input\" className=\"upload-btn\">\r\n                      Choose Battle Map Image\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  {battleMapPreview && (\r\n                    <div className=\"battle-map-preview\">\r\n                      <img src={battleMapPreview} alt=\"Battle Map Preview\" />\r\n                      <button \r\n                        className=\"remove-map-btn\"\r\n                        onClick={handleRemoveBattleMap}\r\n                      >\r\n                        Remove Map\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Event Conditions */}\r\n                <EventConditions\r\n                  conditions={editingEvent.conditions || []}\r\n                  onConditionsChange={handleConditionsChange}\r\n                  availableEvents={events.filter(e => e.id !== editingEvent.id)}\r\n                  availableCharacters={characters}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"event-edit-actions\">\r\n              <button onClick={handleSaveEvent} className=\"save-btn\">Save Changes</button>\r\n              <button onClick={handleCancelEdit} className=\"cancel-btn\">Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Event creation modal */}\r\n      {isCreatingEvent && (\r\n        <div className=\"create-event-modal\">\r\n          <h3>Create New Event</h3>\r\n          <div className=\"form-group\">\r\n            <label>Title:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={newEventData.title} \r\n              onChange={(e) => setNewEventData({...newEventData, title: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Location:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={newEventData.location} \r\n              onChange={(e) => setNewEventData({...newEventData, location: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <textarea \r\n              value={newEventData.description} \r\n              onChange={(e) => setNewEventData({...newEventData, description: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={newEventData.isPartyLocation} \r\n                onChange={(e) => setNewEventData({...newEventData, isPartyLocation: e.target.checked})}\r\n              />\r\n              Party is here\r\n            </label>\r\n          </div>\r\n          <div className=\"modal-actions\">\r\n            <button onClick={handleCreateEvent}>Create</button>\r\n            <button onClick={handleCancelCreate}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoreMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}