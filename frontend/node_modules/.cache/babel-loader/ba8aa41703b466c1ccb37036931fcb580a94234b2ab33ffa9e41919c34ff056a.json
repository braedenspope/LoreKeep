{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\braed\\\\OneDrive\\\\Desktop\\\\LoreKeep\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\nimport config from './config';\n\n// Import auth components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\n\n// Import other components\nimport LoreMapEditor from './components/LoreMap/LoreMapEditor';\nimport CharacterManager from './components/characters/CharacterManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        console.log('Checking authentication...');\n\n        // Check if there's a user in localStorage\n        const savedUser = localStorage.getItem('user');\n        console.log('Saved user in localStorage:', savedUser);\n        if (savedUser) {\n          const userData = JSON.parse(savedUser);\n\n          // Validate the session with the server\n          console.log('Validating session with server...');\n          try {\n            const response = await fetch(`${config.apiUrl}/api/validate-session`, {\n              method: 'GET',\n              credentials: 'include'\n            });\n            console.log('Session validation response:', response.status);\n            if (response.ok) {\n              console.log('Session is valid, setting user');\n              setUser(userData);\n              setIsAuthenticated(true);\n            } else {\n              console.log('Session invalid, clearing localStorage');\n              // Session is invalid, remove from localStorage\n              localStorage.removeItem('user');\n              setUser(null);\n              setIsAuthenticated(false);\n            }\n          } catch (fetchError) {\n            console.log('Session validation failed (network error):', fetchError);\n            // If server is not running, we'll just use the saved user data\n            // This helps during development when backend might not be running\n            console.log('Using saved user data due to network error');\n            setUser(userData);\n            setIsAuthenticated(true);\n          }\n        } else {\n          console.log('No saved user found');\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error('Authentication error:', error);\n        localStorage.removeItem('user');\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        console.log('Setting loading to false');\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const handleLogin = userData => {\n    console.log('Handling login for user:', userData);\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const handleLogout = async () => {\n    console.log('Handling logout...');\n    try {\n      // Call the logout endpoint\n      await fetch(`${config.apiUrl}/api/logout`, {\n        method: 'POST',\n        credentials: 'include'\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n\n    // Regardless of server response, clear the local state\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n  };\n\n  // Add debug logging for state changes\n  useEffect(() => {\n    console.log('Auth state changed:', {\n      isAuthenticated,\n      user: user === null || user === void 0 ? void 0 : user.username,\n      loading\n    });\n  }, [isAuthenticated, user, loading]);\n  if (loading) {\n    console.log('App is loading...');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n  console.log('Rendering App with auth state:', {\n    isAuthenticated,\n    user: user === null || user === void 0 ? void 0 : user.username\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isAuthenticated: isAuthenticated,\n        onLogout: handleLogout,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/loremap/:id\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(LoreMapEditor, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/characters\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(CharacterManager, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: isAuthenticated ? \"/dashboard\" : \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w9926n1HY7utJLC4pccmAaI+eKY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Navbar","Dashboard","config","Login","Register","LoreMapEditor","CharacterManager","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkAuth","console","log","savedUser","localStorage","getItem","userData","JSON","parse","response","fetch","apiUrl","method","credentials","status","ok","removeItem","fetchError","error","handleLogin","setItem","stringify","handleLogout","username","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","path","element","onLogin","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/braed/OneDrive/Desktop/LoreKeep/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Dashboard from './components/Dashboard';\r\nimport './App.css';\r\nimport config from './config';\r\n\r\n// Import auth components\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\n\r\n// Import other components\r\nimport LoreMapEditor from './components/LoreMap/LoreMapEditor';\r\nimport CharacterManager from './components/characters/CharacterManager';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is logged in\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        console.log('Checking authentication...');\r\n        \r\n        // Check if there's a user in localStorage\r\n        const savedUser = localStorage.getItem('user');\r\n        console.log('Saved user in localStorage:', savedUser);\r\n        \r\n        if (savedUser) {\r\n          const userData = JSON.parse(savedUser);\r\n          \r\n          // Validate the session with the server\r\n          console.log('Validating session with server...');\r\n          \r\n          try {\r\n            const response = await fetch(`${config.apiUrl}/api/validate-session`, {\r\n              method: 'GET',\r\n              credentials: 'include'\r\n            });\r\n            \r\n            console.log('Session validation response:', response.status);\r\n            \r\n            if (response.ok) {\r\n              console.log('Session is valid, setting user');\r\n              setUser(userData);\r\n              setIsAuthenticated(true);\r\n            } else {\r\n              console.log('Session invalid, clearing localStorage');\r\n              // Session is invalid, remove from localStorage\r\n              localStorage.removeItem('user');\r\n              setUser(null);\r\n              setIsAuthenticated(false);\r\n            }\r\n          } catch (fetchError) {\r\n            console.log('Session validation failed (network error):', fetchError);\r\n            // If server is not running, we'll just use the saved user data\r\n            // This helps during development when backend might not be running\r\n            console.log('Using saved user data due to network error');\r\n            setUser(userData);\r\n            setIsAuthenticated(true);\r\n          }\r\n        } else {\r\n          console.log('No saved user found');\r\n          setIsAuthenticated(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Authentication error:', error);\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n      } finally {\r\n        console.log('Setting loading to false');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const handleLogin = (userData) => {\r\n    console.log('Handling login for user:', userData);\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    console.log('Handling logout...');\r\n    \r\n    try {\r\n      // Call the logout endpoint\r\n      await fetch(`${config.apiUrl}/api/logout`, {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n      });\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n    \r\n    // Regardless of server response, clear the local state\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // Add debug logging for state changes\r\n  useEffect(() => {\r\n    console.log('Auth state changed:', { isAuthenticated, user: user?.username, loading });\r\n  }, [isAuthenticated, user, loading]);\r\n\r\n  if (loading) {\r\n    console.log('App is loading...');\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  console.log('Rendering App with auth state:', { isAuthenticated, user: user?.username });\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Navbar isAuthenticated={isAuthenticated} onLogout={handleLogout} user={user} />\r\n        <div className=\"content\">\r\n          <Routes>\r\n            <Route path=\"/login\" element={\r\n              !isAuthenticated ? \r\n                <Login onLogin={handleLogin} /> : \r\n                <Navigate to=\"/dashboard\" replace />\r\n            } />\r\n            <Route path=\"/register\" element={\r\n              !isAuthenticated ? \r\n                <Register /> : \r\n                <Navigate to=\"/dashboard\" replace />\r\n            } />\r\n            <Route path=\"/dashboard\" element={\r\n              isAuthenticated ? \r\n                <Dashboard user={user} /> : \r\n                <Navigate to=\"/login\" replace />\r\n            } />\r\n            <Route path=\"/loremap/:id\" element={\r\n              isAuthenticated ? \r\n                <LoreMapEditor user={user} /> : \r\n                <Navigate to=\"/login\" replace />\r\n            } />\r\n            <Route path=\"/characters\" element={\r\n              isAuthenticated ? \r\n                <CharacterManager user={user} /> : \r\n                <Navigate to=\"/login\" replace />\r\n            } />\r\n            <Route path=\"/\" element={\r\n              <Navigate to={isAuthenticated ? \"/dashboard\" : \"/login\"} replace />\r\n            } />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}