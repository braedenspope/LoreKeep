{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\braed\\\\OneDrive\\\\Desktop\\\\LoreKeep\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\n// Import auth components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\n\n// Import other components\nimport LoreMapEditor from './components/loremap/LoreMapEditor';\nimport CharacterManager from './components/characters/CharacterManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        // Check if there's a user in localStorage\n        const savedUser = JSON.parse(localStorage.getItem('user'));\n        if (savedUser) {\n          // Validate the session with the server\n          const response = await fetch('http://localhost:5000/api/validate-session', {\n            method: 'GET',\n            credentials: 'include' // Include cookies for session-based auth\n          }).catch(() => {\n            // If the server is not running, we'll just use the saved user data\n            // This helps during development when backend might not be running\n            return {\n              ok: true\n            };\n          });\n          if (response && response.ok) {\n            setUser(savedUser);\n            setIsAuthenticated(true);\n          } else {\n            // Session is invalid, remove from localStorage\n            localStorage.removeItem('user');\n          }\n        }\n      } catch (error) {\n        console.error('Authentication error:', error);\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const handleLogin = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const handleLogout = async () => {\n    try {\n      // Call the logout endpoint\n      await fetch('http://localhost:5000/api/logout', {\n        method: 'POST',\n        credentials: 'include'\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n\n    // Regardless of server response, clear the local state\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isAuthenticated: isAuthenticated,\n        onLogout: handleLogout,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/loremap/:id\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(LoreMapEditor, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/characters\",\n            element: isAuthenticated ? /*#__PURE__*/_jsxDEV(CharacterManager, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: isAuthenticated ? \"/dashboard\" : \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Navbar","Dashboard","Login","Register","LoreMapEditor","CharacterManager","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkAuth","savedUser","JSON","parse","localStorage","getItem","response","fetch","method","credentials","catch","ok","removeItem","error","console","handleLogin","userData","setItem","stringify","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","path","element","onLogin","to","_c","$RefreshReg$"],"sources":["C:/Users/braed/OneDrive/Desktop/LoreKeep/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Dashboard from './components/Dashboard';\r\nimport './App.css';\r\n\r\n// Import auth components\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\n\r\n// Import other components\r\nimport LoreMapEditor from './components/loremap/LoreMapEditor';\r\nimport CharacterManager from './components/characters/CharacterManager';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is logged in\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        // Check if there's a user in localStorage\r\n        const savedUser = JSON.parse(localStorage.getItem('user'));\r\n        \r\n        if (savedUser) {\r\n          // Validate the session with the server\r\n          const response = await fetch('http://localhost:5000/api/validate-session', {\r\n            method: 'GET',\r\n            credentials: 'include' // Include cookies for session-based auth\r\n          }).catch(() => {\r\n            // If the server is not running, we'll just use the saved user data\r\n            // This helps during development when backend might not be running\r\n            return { ok: true };\r\n          });\r\n          \r\n          if (response && response.ok) {\r\n            setUser(savedUser);\r\n            setIsAuthenticated(true);\r\n          } else {\r\n            // Session is invalid, remove from localStorage\r\n            localStorage.removeItem('user');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Authentication error:', error);\r\n        localStorage.removeItem('user');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const handleLogin = (userData) => {\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Call the logout endpoint\r\n      await fetch('http://localhost:5000/api/logout', {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n      });\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n    \r\n    // Regardless of server response, clear the local state\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Navbar isAuthenticated={isAuthenticated} onLogout={handleLogout} user={user} />\r\n        <div className=\"content\">\r\n          <Routes>\r\n            <Route path=\"/login\" element={\r\n              !isAuthenticated ? \r\n                <Login onLogin={handleLogin} /> : \r\n                <Navigate to=\"/dashboard\" />\r\n            } />\r\n            <Route path=\"/register\" element={\r\n              !isAuthenticated ? \r\n                <Register /> : \r\n                <Navigate to=\"/dashboard\" />\r\n            } />\r\n            <Route path=\"/dashboard\" element={\r\n              isAuthenticated ? \r\n                <Dashboard user={user} /> : \r\n                <Navigate to=\"/login\" />\r\n            } />\r\n            <Route path=\"/loremap/:id\" element={\r\n              isAuthenticated ? \r\n                <LoreMapEditor user={user} /> : \r\n                <Navigate to=\"/login\" />\r\n            } />\r\n            <Route path=\"/characters\" element={\r\n              isAuthenticated ? \r\n                <CharacterManager user={user} /> : \r\n                <Navigate to=\"/login\" />\r\n            } />\r\n            <Route path=\"/\" element={<Navigate to={isAuthenticated ? \"/dashboard\" : \"/login\"} />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}