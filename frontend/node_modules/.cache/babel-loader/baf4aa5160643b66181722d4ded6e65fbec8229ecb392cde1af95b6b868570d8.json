{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\braed\\\\OneDrive\\\\Desktop\\\\LoreKeep\\\\frontend\\\\src\\\\components\\\\LoreMap\\\\LoreMapEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoreMap from '../LoreMap/LoreMap';\nimport './LoreMapEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoreMapEditor = ({\n  user\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [loreMap, setLoreMap] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchLoreMap();\n  }, [id]);\n  const fetchLoreMap = async () => {\n    try {\n      // In a real app, you would fetch this from your API\n      // For now, we'll simulate a fetch with a timeout\n      setTimeout(() => {\n        const sampleMap = {\n          id: parseInt(id),\n          title: `Campaign #${id}`,\n          description: 'A sample campaign for development',\n          events: [{\n            id: 1,\n            title: 'Campaign Start',\n            description: 'The party meets at a tavern in Waterdeep',\n            location: 'Waterdeep',\n            position: {\n              x: 300,\n              y: 100\n            },\n            isPartyLocation: true\n          }, {\n            id: 2,\n            title: 'Meeting the Quest Giver',\n            description: 'Lord Neverember offers a quest to investigate strange happenings',\n            location: 'Castle Ward',\n            position: {\n              x: 400,\n              y: 200\n            },\n            isPartyLocation: false\n          }],\n          connections: [{\n            id: 1,\n            from: 1,\n            to: 2\n          }]\n        };\n        setLoreMap(sampleMap);\n        setLoading(false);\n      }, 800);\n    } catch (err) {\n      console.error('Failed to fetch lore map:', err);\n      setError('Failed to load campaign. Please try again later.');\n      setLoading(false);\n    }\n  };\n  const handleUpdateLoreMap = updatedMap => {\n    setLoreMap(updatedMap);\n    // In a real app, you would save this to your API\n    console.log('LoreMap updated:', updatedMap);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading campaign...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loremap-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: loreMap.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loreMap.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-toolbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"editor-button\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"editor-button secondary\",\n        children: \"Export Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-content\",\n      children: /*#__PURE__*/_jsxDEV(LoreMap, {\n        initialEvents: loreMap.events,\n        initialConnections: loreMap.connections,\n        onChange: handleUpdateLoreMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(LoreMapEditor, \"W4BTB99B6lbGXBRwLvKlRyh4zRo=\", false, function () {\n  return [useParams];\n});\n_c = LoreMapEditor;\nexport default LoreMapEditor;\nvar _c;\n$RefreshReg$(_c, \"LoreMapEditor\");","map":{"version":3,"names":["React","useState","useEffect","useParams","LoreMap","jsxDEV","_jsxDEV","LoreMapEditor","user","_s","id","loreMap","setLoreMap","loading","setLoading","error","setError","fetchLoreMap","setTimeout","sampleMap","parseInt","title","description","events","location","position","x","y","isPartyLocation","connections","from","to","err","console","handleUpdateLoreMap","updatedMap","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialEvents","initialConnections","onChange","_c","$RefreshReg$"],"sources":["C:/Users/braed/OneDrive/Desktop/LoreKeep/frontend/src/components/LoreMap/LoreMapEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport LoreMap from '../LoreMap/LoreMap';\r\nimport './LoreMapEditor.css';\r\n\r\nconst LoreMapEditor = ({ user }) => {\r\n  const { id } = useParams();\r\n  const [loreMap, setLoreMap] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchLoreMap();\r\n  }, [id]);\r\n\r\n  const fetchLoreMap = async () => {\r\n    try {\r\n      // In a real app, you would fetch this from your API\r\n      // For now, we'll simulate a fetch with a timeout\r\n      setTimeout(() => {\r\n        const sampleMap = {\r\n          id: parseInt(id),\r\n          title: `Campaign #${id}`,\r\n          description: 'A sample campaign for development',\r\n          events: [\r\n            {\r\n              id: 1,\r\n              title: 'Campaign Start',\r\n              description: 'The party meets at a tavern in Waterdeep',\r\n              location: 'Waterdeep',\r\n              position: { x: 300, y: 100 },\r\n              isPartyLocation: true,\r\n            },\r\n            {\r\n              id: 2,\r\n              title: 'Meeting the Quest Giver',\r\n              description: 'Lord Neverember offers a quest to investigate strange happenings',\r\n              location: 'Castle Ward',\r\n              position: { x: 400, y: 200 },\r\n              isPartyLocation: false,\r\n            },\r\n          ],\r\n          connections: [\r\n            { id: 1, from: 1, to: 2 }\r\n          ]\r\n        };\r\n        \r\n        setLoreMap(sampleMap);\r\n        setLoading(false);\r\n      }, 800);\r\n    } catch (err) {\r\n      console.error('Failed to fetch lore map:', err);\r\n      setError('Failed to load campaign. Please try again later.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateLoreMap = (updatedMap) => {\r\n    setLoreMap(updatedMap);\r\n    // In a real app, you would save this to your API\r\n    console.log('LoreMap updated:', updatedMap);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading campaign...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"loremap-editor\">\r\n      <div className=\"editor-header\">\r\n        <h2>{loreMap.title}</h2>\r\n        <p>{loreMap.description}</p>\r\n      </div>\r\n      \r\n      <div className=\"editor-toolbox\">\r\n        <button className=\"editor-button\">Save Changes</button>\r\n        <button className=\"editor-button secondary\">Export Map</button>\r\n      </div>\r\n      \r\n      <div className=\"editor-content\">\r\n        <LoreMap \r\n          initialEvents={loreMap.events}\r\n          initialConnections={loreMap.connections}\r\n          onChange={handleUpdateLoreMap}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoreMapEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}