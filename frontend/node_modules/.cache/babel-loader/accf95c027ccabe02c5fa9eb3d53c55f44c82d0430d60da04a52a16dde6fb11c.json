{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\braed\\\\OneDrive\\\\Desktop\\\\LoreKeep\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Dashboard.css';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n  const [loreMaps, setLoreMaps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showNewMapForm, setShowNewMapForm] = useState(false);\n  const [newMapData, setNewMapData] = useState({\n    title: '',\n    description: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log('Dashboard mounted, user:', user);\n    fetchLoreMaps();\n  }, []); // Remove location dependency for now\n\n  // Update the fetchLoreMaps function in Dashboard.js\n  const fetchLoreMaps = async () => {\n    console.log('Fetching lore maps...');\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${config.apiUrl}/api/loremaps`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      console.log('Lore maps response status:', response.status);\n      if (response.status === 401) {\n        // User is not authenticated, clear localStorage and redirect\n        console.log('User not authenticated, clearing session');\n        localStorage.removeItem('user');\n        window.location.href = '/login'; // Force full page reload to login\n        return;\n      }\n      if (!response.ok) {\n        throw new Error(`Failed to fetch campaigns (${response.status})`);\n      }\n      const data = await response.json();\n      console.log('Fetched lore maps:', data);\n      setLoreMaps(data);\n    } catch (err) {\n      console.error('Failed to fetch lore maps:', err);\n\n      // Check if it's a network error\n      if (err.message.includes('fetch')) {\n        setError('Cannot connect to server. Please check if the backend is running on http://localhost:5000');\n      } else {\n        setError('Failed to load your campaigns. Please try again later.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update handleCreateMap in Dashboard.js\n  const handleCreateMap = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${config.apiUrl}/api/loremaps`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          title: newMapData.title,\n          description: newMapData.description\n        })\n      });\n      if (response.status === 401) {\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n        return;\n      }\n      if (!response.ok) {\n        throw new Error('Failed to create campaign');\n      }\n      const data = await response.json();\n      setLoreMaps([...loreMaps, data]);\n      setShowNewMapForm(false);\n      setNewMapData({\n        title: '',\n        description: ''\n      });\n\n      // Navigate to the new map\n      navigate(`/loremap/${data.id}`);\n    } catch (err) {\n      console.error('Failed to create lore map:', err);\n      setError('Failed to create new campaign. Please try again.');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewMapData({\n      ...newMapData,\n      [name]: value\n    });\n  };\n  const handleDeleteMap = async (id, title) => {\n    // Confirm deletion\n    if (!window.confirm(`Are you sure you want to delete \"${title}\"? This action cannot be undone.`)) {\n      return;\n    }\n    try {\n      const response = await fetch(`${config.apiUrl}/api/loremaps/${id}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (response.status === 401) {\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n        return;\n      }\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to delete campaign');\n      }\n\n      // Remove from local state\n      setLoreMaps(loreMaps.filter(map => map.id !== id));\n      console.log('Campaign deleted successfully');\n    } catch (err) {\n      console.error('Failed to delete campaign:', err);\n      setError('Failed to delete campaign. Please try again.');\n    }\n  };\n\n  // Check if backend is reachable\n  const checkBackendHealth = async () => {\n    try {\n      const response = await fetch(`${config.apiUrl}/api/test`);\n      if (response.ok) {\n        alert('Backend is reachable! âœ…');\n        fetchLoreMaps(); // Retry fetching data\n      } else {\n        alert('Backend responded but with an error');\n      }\n    } catch (err) {\n      alert('Backend is not reachable. Make sure it\\'s running on http://localhost:5000');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading your campaigns...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Campaigns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-map-btn\",\n          onClick: () => setShowNewMapForm(true),\n          children: \"Create New Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-map-btn\",\n          onClick: checkBackendHealth,\n          style: {\n            marginLeft: '10px',\n            backgroundColor: '#666'\n          },\n          children: \"Test Backend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchLoreMaps,\n        style: {\n          marginLeft: '10px',\n          padding: '5px 10px'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lore-maps-grid\",\n      children: loreMaps.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-maps-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You don't have any campaigns yet. Create your first one to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this) : loreMaps.map(map => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lore-map-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: map.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: map.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-dates\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Created: \", new Date(map.created_at).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Updated: \", new Date(map.updated_at).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-actions\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/loremap/${map.id}`,\n            className: \"edit-map-btn\",\n            children: \"Open Campaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-map-btn\",\n            onClick: () => handleDeleteMap(map.id, map.title),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)]\n      }, map.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), showNewMapForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-map-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateMap,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Campaign Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              name: \"title\",\n              value: newMapData.title,\n              onChange: handleInputChange,\n              required: true,\n              placeholder: \"Enter a title for your campaign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              value: newMapData.description,\n              onChange: handleInputChange,\n              placeholder: \"Describe your campaign (optional)\",\n              rows: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"create-btn\",\n              children: \"Create Campaign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"cancel-btn\",\n              onClick: () => setShowNewMapForm(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"PCz5rS3zgO2J4SN5W36OTyHgMVw=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","config","jsxDEV","_jsxDEV","Dashboard","user","_s","loreMaps","setLoreMaps","loading","setLoading","error","setError","showNewMapForm","setShowNewMapForm","newMapData","setNewMapData","title","description","navigate","console","log","fetchLoreMaps","response","fetch","apiUrl","method","credentials","status","localStorage","removeItem","window","location","href","ok","Error","data","json","err","message","includes","handleCreateMap","e","preventDefault","headers","body","JSON","stringify","id","handleInputChange","name","value","target","handleDeleteMap","confirm","errorData","filter","map","checkBackendHealth","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","backgroundColor","padding","length","Date","created_at","toLocaleDateString","updated_at","to","onSubmit","htmlFor","type","onChange","required","placeholder","rows","_c","$RefreshReg$"],"sources":["C:/Users/braed/OneDrive/Desktop/LoreKeep/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './Dashboard.css';\r\nimport config from '../config';\r\n\r\nconst Dashboard = ({ user }) => {\r\n  const [loreMaps, setLoreMaps] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showNewMapForm, setShowNewMapForm] = useState(false);\r\n  const [newMapData, setNewMapData] = useState({ title: '', description: '' });\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log('Dashboard mounted, user:', user);\r\n    fetchLoreMaps();\r\n  }, []); // Remove location dependency for now\r\n\r\n  // Update the fetchLoreMaps function in Dashboard.js\r\n  const fetchLoreMaps = async () => {\r\n    console.log('Fetching lore maps...');\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch(`${config.apiUrl}/api/loremaps`, {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n      });\r\n      \r\n      console.log('Lore maps response status:', response.status);\r\n      \r\n      if (response.status === 401) {\r\n        // User is not authenticated, clear localStorage and redirect\r\n        console.log('User not authenticated, clearing session');\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login'; // Force full page reload to login\r\n        return;\r\n      }\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch campaigns (${response.status})`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Fetched lore maps:', data);\r\n      setLoreMaps(data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch lore maps:', err);\r\n      \r\n      // Check if it's a network error\r\n      if (err.message.includes('fetch')) {\r\n        setError('Cannot connect to server. Please check if the backend is running on http://localhost:5000');\r\n      } else {\r\n        setError('Failed to load your campaigns. Please try again later.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update handleCreateMap in Dashboard.js\r\n  const handleCreateMap = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const response = await fetch(`${config.apiUrl}/api/loremaps`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          title: newMapData.title,\r\n          description: newMapData.description,\r\n        })\r\n      });\r\n      \r\n      if (response.status === 401) {\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login';\r\n        return;\r\n      }\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to create campaign');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setLoreMaps([...loreMaps, data]);\r\n      setShowNewMapForm(false);\r\n      setNewMapData({ title: '', description: '' });\r\n      \r\n      // Navigate to the new map\r\n      navigate(`/loremap/${data.id}`);\r\n    } catch (err) {\r\n      console.error('Failed to create lore map:', err);\r\n      setError('Failed to create new campaign. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewMapData({ ...newMapData, [name]: value });\r\n  };\r\n\r\n  const handleDeleteMap = async (id, title) => {\r\n    // Confirm deletion\r\n    if (!window.confirm(`Are you sure you want to delete \"${title}\"? This action cannot be undone.`)) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`${config.apiUrl}/api/loremaps/${id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (response.status === 401) {\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login';\r\n        return;\r\n      }\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to delete campaign');\r\n      }\r\n      \r\n      // Remove from local state\r\n      setLoreMaps(loreMaps.filter(map => map.id !== id));\r\n      \r\n      console.log('Campaign deleted successfully');\r\n      \r\n    } catch (err) {\r\n      console.error('Failed to delete campaign:', err);\r\n      setError('Failed to delete campaign. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Check if backend is reachable\r\n  const checkBackendHealth = async () => {\r\n    try {\r\n      const response = await fetch(`${config.apiUrl}/api/test`);\r\n      if (response.ok) {\r\n        alert('Backend is reachable! âœ…');\r\n        fetchLoreMaps(); // Retry fetching data\r\n      } else {\r\n        alert('Backend responded but with an error');\r\n      }\r\n    } catch (err) {\r\n      alert('Backend is not reachable. Make sure it\\'s running on http://localhost:5000');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading your campaigns...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h2>Your Campaigns</h2>\r\n        <div>\r\n          <button \r\n            className=\"new-map-btn\"\r\n            onClick={() => setShowNewMapForm(true)}\r\n          >\r\n            Create New Campaign\r\n          </button>\r\n          {/* Debug button */}\r\n          <button \r\n            className=\"new-map-btn\"\r\n            onClick={checkBackendHealth}\r\n            style={{ marginLeft: '10px', backgroundColor: '#666' }}\r\n          >\r\n            Test Backend\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          {error}\r\n          <button \r\n            onClick={fetchLoreMaps} \r\n            style={{ marginLeft: '10px', padding: '5px 10px' }}\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"lore-maps-grid\">\r\n        {loreMaps.length === 0 ? (\r\n          <div className=\"no-maps-message\">\r\n            <p>You don't have any campaigns yet. Create your first one to get started!</p>\r\n          </div>\r\n        ) : (\r\n          loreMaps.map(map => (\r\n            <div className=\"lore-map-card\" key={map.id}>\r\n              <h3>{map.title}</h3>\r\n              <p>{map.description}</p>\r\n              <div className=\"map-dates\">\r\n                <span>Created: {new Date(map.created_at).toLocaleDateString()}</span>\r\n                <span>Updated: {new Date(map.updated_at).toLocaleDateString()}</span>\r\n              </div>\r\n              <div className=\"map-actions\">\r\n                <Link to={`/loremap/${map.id}`} className=\"edit-map-btn\">\r\n                  Open Campaign\r\n                </Link>\r\n                <button \r\n                  className=\"delete-map-btn\"\r\n                  onClick={() => handleDeleteMap(map.id, map.title)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      \r\n      {showNewMapForm && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"create-map-modal\">\r\n            <h3>Create New Campaign</h3>\r\n            <form onSubmit={handleCreateMap}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Campaign Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  value={newMapData.title}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  placeholder=\"Enter a title for your campaign\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={newMapData.description}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Describe your campaign (optional)\"\r\n                  rows=\"4\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-actions\">\r\n                <button type=\"submit\" className=\"create-btn\">Create Campaign</button>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"cancel-btn\"\r\n                  onClick={() => setShowNewMapForm(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAE5E,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACdsB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEhB,IAAI,CAAC;IAC7CiB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCX,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGvB,MAAM,CAACwB,MAAM,eAAe,EAAE;QAC5DC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf,CAAC,CAAC;MAEFP,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,QAAQ,CAACK,MAAM,CAAC;MAE1D,IAAIL,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAR,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;QACvDQ,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;QAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;QACjC;MACF;MAEA,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8BZ,QAAQ,CAACK,MAAM,GAAG,CAAC;MACnE;MAEA,MAAMQ,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;MAClCjB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEe,IAAI,CAAC;MACvC5B,WAAW,CAAC4B,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZlB,OAAO,CAACT,KAAK,CAAC,4BAA4B,EAAE2B,GAAG,CAAC;;MAEhD;MACA,IAAIA,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;QACjC5B,QAAQ,CAAC,2FAA2F,CAAC;MACvG,CAAC,MAAM;QACLA,QAAQ,CAAC,wDAAwD,CAAC;MACpE;IACF,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM+B,eAAe,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGvB,MAAM,CAACwB,MAAM,eAAe,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdkB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDjB,WAAW,EAAE,SAAS;QACtBkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB9B,KAAK,EAAEF,UAAU,CAACE,KAAK;UACvBC,WAAW,EAAEH,UAAU,CAACG;QAC1B,CAAC;MACH,CAAC,CAAC;MAEF,IAAIK,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3BC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;QAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B;MACF;MAEA,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;MAClC7B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE6B,IAAI,CAAC,CAAC;MAChCtB,iBAAiB,CAAC,KAAK,CAAC;MACxBE,aAAa,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC,CAAC;;MAE7C;MACAC,QAAQ,CAAC,YAAYiB,IAAI,CAACY,EAAE,EAAE,CAAC;IACjC,CAAC,CAAC,OAAOV,GAAG,EAAE;MACZlB,OAAO,CAACT,KAAK,CAAC,4BAA4B,EAAE2B,GAAG,CAAC;MAChD1B,QAAQ,CAAC,kDAAkD,CAAC;IAC9D;EACF,CAAC;EAED,MAAMqC,iBAAiB,GAAIP,CAAC,IAAK;IAC/B,MAAM;MAAEQ,IAAI;MAAEC;IAAM,CAAC,GAAGT,CAAC,CAACU,MAAM;IAChCpC,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAE,CAACmC,IAAI,GAAGC;IAAM,CAAC,CAAC;EACjD,CAAC;EAED,MAAME,eAAe,GAAG,MAAAA,CAAOL,EAAE,EAAE/B,KAAK,KAAK;IAC3C;IACA,IAAI,CAACc,MAAM,CAACuB,OAAO,CAAC,oCAAoCrC,KAAK,kCAAkC,CAAC,EAAE;MAChG;IACF;IAEA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGvB,MAAM,CAACwB,MAAM,iBAAiBuB,EAAE,EAAE,EAAE;QAClEtB,MAAM,EAAE,QAAQ;QAChBC,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3BC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;QAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B;MACF;MAEA,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAMqB,SAAS,GAAG,MAAMhC,QAAQ,CAACc,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIF,KAAK,CAACoB,SAAS,CAAC5C,KAAK,IAAI,2BAA2B,CAAC;MACjE;;MAEA;MACAH,WAAW,CAACD,QAAQ,CAACiD,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACT,EAAE,KAAKA,EAAE,CAAC,CAAC;MAElD5B,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAE9C,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZlB,OAAO,CAACT,KAAK,CAAC,4BAA4B,EAAE2B,GAAG,CAAC;MAChD1B,QAAQ,CAAC,8CAA8C,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAM8C,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMnC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGvB,MAAM,CAACwB,MAAM,WAAW,CAAC;MACzD,IAAIF,QAAQ,CAACW,EAAE,EAAE;QACfyB,KAAK,CAAC,yBAAyB,CAAC;QAChCrC,aAAa,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACLqC,KAAK,CAAC,qCAAqC,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOrB,GAAG,EAAE;MACZqB,KAAK,CAAC,4EAA4E,CAAC;IACrF;EACF,CAAC;EAED,IAAIlD,OAAO,EAAE;IACX,oBAAON,OAAA;MAAKyD,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE;EAEA,oBACE9D,OAAA;IAAKyD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB1D,OAAA;MAAKyD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B1D,OAAA;QAAA0D,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB9D,OAAA;QAAA0D,QAAA,gBACE1D,OAAA;UACEyD,SAAS,EAAC,aAAa;UACvBM,OAAO,EAAEA,CAAA,KAAMpD,iBAAiB,CAAC,IAAI,CAAE;UAAA+C,QAAA,EACxC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET9D,OAAA;UACEyD,SAAS,EAAC,aAAa;UACvBM,OAAO,EAAER,kBAAmB;UAC5BS,KAAK,EAAE;YAAEC,UAAU,EAAE,MAAM;YAAEC,eAAe,EAAE;UAAO,CAAE;UAAAR,QAAA,EACxD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELtD,KAAK,iBACJR,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BlD,KAAK,eACNR,OAAA;QACE+D,OAAO,EAAE5C,aAAc;QACvB6C,KAAK,EAAE;UAAEC,UAAU,EAAE,MAAM;UAAEE,OAAO,EAAE;QAAW,CAAE;QAAAT,QAAA,EACpD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAED9D,OAAA;MAAKyD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BtD,QAAQ,CAACgE,MAAM,KAAK,CAAC,gBACpBpE,OAAA;QAAKyD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9B1D,OAAA;UAAA0D,QAAA,EAAG;QAAuE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,GAEN1D,QAAQ,CAACkD,GAAG,CAACA,GAAG,iBACdtD,OAAA;QAAKyD,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B1D,OAAA;UAAA0D,QAAA,EAAKJ,GAAG,CAACxC;QAAK;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpB9D,OAAA;UAAA0D,QAAA,EAAIJ,GAAG,CAACvC;QAAW;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB9D,OAAA;UAAKyD,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB1D,OAAA;YAAA0D,QAAA,GAAM,WAAS,EAAC,IAAIW,IAAI,CAACf,GAAG,CAACgB,UAAU,CAAC,CAACC,kBAAkB,CAAC,CAAC;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrE9D,OAAA;YAAA0D,QAAA,GAAM,WAAS,EAAC,IAAIW,IAAI,CAACf,GAAG,CAACkB,UAAU,CAAC,CAACD,kBAAkB,CAAC,CAAC;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eACN9D,OAAA;UAAKyD,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B1D,OAAA,CAACJ,IAAI;YAAC6E,EAAE,EAAE,YAAYnB,GAAG,CAACT,EAAE,EAAG;YAACY,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAEzD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACP9D,OAAA;YACEyD,SAAS,EAAC,gBAAgB;YAC1BM,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAACI,GAAG,CAACT,EAAE,EAAES,GAAG,CAACxC,KAAK,CAAE;YAAA4C,QAAA,EACnD;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GAjB4BR,GAAG,CAACT,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBrC,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELpD,cAAc,iBACbV,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5B1D,OAAA;QAAKyD,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B1D,OAAA;UAAA0D,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5B9D,OAAA;UAAM0E,QAAQ,EAAEpC,eAAgB;UAAAoB,QAAA,gBAC9B1D,OAAA;YAAKyD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB1D,OAAA;cAAO2E,OAAO,EAAC,OAAO;cAAAjB,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7C9D,OAAA;cACE4E,IAAI,EAAC,MAAM;cACX/B,EAAE,EAAC,OAAO;cACVE,IAAI,EAAC,OAAO;cACZC,KAAK,EAAEpC,UAAU,CAACE,KAAM;cACxB+D,QAAQ,EAAE/B,iBAAkB;cAC5BgC,QAAQ;cACRC,WAAW,EAAC;YAAiC;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN9D,OAAA;YAAKyD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB1D,OAAA;cAAO2E,OAAO,EAAC,aAAa;cAAAjB,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChD9D,OAAA;cACE6C,EAAE,EAAC,aAAa;cAChBE,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAEpC,UAAU,CAACG,WAAY;cAC9B8D,QAAQ,EAAE/B,iBAAkB;cAC5BiC,WAAW,EAAC,mCAAmC;cAC/CC,IAAI,EAAC;YAAG;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN9D,OAAA;YAAKyD,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B1D,OAAA;cAAQ4E,IAAI,EAAC,QAAQ;cAACnB,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACrE9D,OAAA;cACE4E,IAAI,EAAC,QAAQ;cACbnB,SAAS,EAAC,YAAY;cACtBM,OAAO,EAAEA,CAAA,KAAMpD,iBAAiB,CAAC,KAAK,CAAE;cAAA+C,QAAA,EACzC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3D,EAAA,CAvQIF,SAAS;EAAA,QAOIJ,WAAW;AAAA;AAAAoF,EAAA,GAPxBhF,SAAS;AAyQf,eAAeA,SAAS;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}