{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\braed\\\\OneDrive\\\\Desktop\\\\LoreKeep\\\\frontend\\\\src\\\\components\\\\LoreMap\\\\LoreMap.jsx\",\n  _s = $RefreshSig$();\n// LoreMap.jsx - Complete updated version with battle maps and character management\nimport React, { useState, useEffect, useRef } from 'react';\nimport './LoreMap.css';\nimport EventConditions from './EventConditions';\nimport config from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoreMap = ({\n  initialEvents,\n  initialConnections,\n  onChange,\n  loreMapId\n}) => {\n  _s();\n  const [events, setEvents] = useState(initialEvents || []);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [isCreatingEvent, setIsCreatingEvent] = useState(false);\n  const [newEventPosition, setNewEventPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [newEventData, setNewEventData] = useState({\n    title: '',\n    description: '',\n    location: '',\n    isPartyLocation: false\n  });\n  const [connections, setConnections] = useState(initialConnections || []);\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggedEvent, setDraggedEvent] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isCreatingConnection, setIsCreatingConnection] = useState(false);\n  const [connectionStart, setConnectionStart] = useState(null);\n  const [characters, setCharacters] = useState([]);\n  const [eventCharacters, setEventCharacters] = useState([]);\n  const [eventStates, setEventStates] = useState({});\n  const [battleMapFile, setBattleMapFile] = useState(null);\n  const [battleMapPreview, setBattleMapPreview] = useState(null);\n  const canvasRef = useRef(null);\n\n  // Update parent component when data changes\n  useEffect(() => {\n    if (onChange) {\n      onChange({\n        id: loreMapId,\n        events: events,\n        connections: connections\n      });\n    }\n  }, [events, connections, onChange, loreMapId]);\n\n  // Initialize from props\n  useEffect(() => {\n    if (initialEvents && initialEvents.length > 0) {\n      setEvents(initialEvents);\n    }\n    if (initialConnections && initialConnections.length > 0) {\n      setConnections(initialConnections);\n    }\n  }, [initialEvents, initialConnections]);\n\n  // Fetch characters\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      try {\n        const response = await fetch(`${config.apiUrl}/api/characters`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setCharacters(data);\n        }\n      } catch (err) {\n        console.error('Failed to fetch characters:', err);\n      }\n    };\n    fetchCharacters();\n  }, []);\n\n  // Fetch event characters when editing an event\n  useEffect(() => {\n    if (editingEvent && editingEvent.id && editingEvent.id <= 1000000) {\n      const fetchEventCharacters = async () => {\n        try {\n          const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/characters`, {\n            method: 'GET',\n            credentials: 'include'\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setEventCharacters(data.map(ec => ec.character_id));\n          }\n        } catch (err) {\n          console.error('Failed to fetch event characters:', err);\n        }\n      };\n      fetchEventCharacters();\n\n      // Set battle map preview if event has one\n      if (editingEvent.battle_map_url) {\n        setBattleMapPreview(`${config.apiUrl}${editingEvent.battle_map_url}`);\n      }\n    } else {\n      setEventCharacters([]);\n      setBattleMapPreview(null);\n    }\n  }, [editingEvent]);\n\n  // Check if event conditions are met\n  const checkEventConditions = event => {\n    let conditions = [];\n\n    // Handle different types of conditions data\n    if (event.conditions) {\n      if (Array.isArray(event.conditions)) {\n        // Already an array\n        conditions = event.conditions;\n      } else if (typeof event.conditions === 'string') {\n        // It's a JSON string, parse it\n        try {\n          conditions = JSON.parse(event.conditions);\n        } catch (e) {\n          console.warn('Failed to parse conditions:', event.conditions);\n          conditions = [];\n        }\n      } else if (typeof event.conditions === 'object') {\n        // It's already an object but not an array\n        conditions = [event.conditions];\n      }\n    }\n    if (!conditions || conditions.length === 0) {\n      return true;\n    }\n    return conditions.every(condition => {\n      switch (condition.type) {\n        case 'event_completed':\n          const isCompleted = eventStates[`event_${condition.target}_completed`] || false;\n          return condition.required ? isCompleted : !isCompleted;\n        case 'character_freed':\n          const isFreed = eventStates[`character_${condition.target}_freed`] || false;\n          return condition.required ? isFreed : !isFreed;\n        case 'character_alive':\n          const isAlive = eventStates[`character_${condition.target}_alive`] !== false;\n          return condition.required ? isAlive : !isAlive;\n        case 'custom':\n          const customState = eventStates[`custom_${condition.id}`] || false;\n          return condition.required ? customState : !customState;\n        default:\n          return true;\n      }\n    });\n  };\n\n  // Toggle event completion state\n  const toggleEventCompleted = eventId => {\n    const key = `event_${eventId}_completed`;\n    setEventStates(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n\n  // Handle single click - just select/highlight\n  const handleEventClick = (event, e) => {\n    e.stopPropagation();\n\n    // If in connection creation mode, complete the connection\n    if (isCreatingConnection && connectionStart && connectionStart.id !== event.id) {\n      const newConnection = {\n        id: Date.now(),\n        from: connectionStart.id,\n        to: event.id,\n        description: ''\n      };\n      setConnections([...connections, newConnection]);\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    setSelectedEvent(event);\n  };\n\n  // Handle double click - open edit modal\n  const handleEventDoubleClick = (event, e) => {\n    e.stopPropagation();\n    if (isCreatingConnection) return; // Don't open edit in connection mode\n\n    // Parse the event data properly\n    const eventToEdit = {\n      ...event,\n      conditions: event.conditions || []\n    };\n    setEditingEvent(eventToEdit);\n    setBattleMapFile(null);\n\n    // Set battle map preview if event has one\n    if (event.battle_map_url) {\n      setBattleMapPreview(`${config.apiUrl}${event.battle_map_url}`);\n    } else {\n      setBattleMapPreview(null);\n    }\n  };\n\n  // Handle battle map file upload\n  const handleBattleMapUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setBattleMapFile(file);\n\n      // Create preview\n      const reader = new FileReader();\n      reader.onload = e => {\n        setBattleMapPreview(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Remove battle map\n  const handleRemoveBattleMap = async () => {\n    if (editingEvent && editingEvent.id && editingEvent.id <= 1000000) {\n      try {\n        const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/battle-map`, {\n          method: 'DELETE',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          setBattleMapFile(null);\n          setBattleMapPreview(null);\n          setEditingEvent({\n            ...editingEvent,\n            battle_map_url: null\n          });\n        }\n      } catch (err) {\n        console.error('Failed to remove battle map:', err);\n      }\n    } else {\n      // For new events, just clear locally\n      setBattleMapFile(null);\n      setBattleMapPreview(null);\n      if (editingEvent) {\n        setEditingEvent({\n          ...editingEvent,\n          battle_map_url: null\n        });\n      }\n    }\n  };\n\n  // Handle conditions change for editing event\n  const handleConditionsChange = newConditions => {\n    if (!editingEvent) return;\n    setEditingEvent({\n      ...editingEvent,\n      conditions: newConditions\n    });\n  };\n\n  // Add character to event\n  const handleAddCharacterToEvent = async characterId => {\n    if (!editingEvent || !characterId || eventCharacters.includes(characterId)) return;\n    try {\n      if (editingEvent.id && editingEvent.id <= 1000000) {\n        const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/characters`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            character_id: characterId,\n            role: 'present'\n          })\n        });\n        if (response.ok) {\n          setEventCharacters([...eventCharacters, characterId]);\n        }\n      } else {\n        // For new events, just add to local state\n        setEventCharacters([...eventCharacters, characterId]);\n      }\n    } catch (err) {\n      console.error('Failed to add character to event:', err);\n    }\n  };\n\n  // Remove character from event\n  const handleRemoveCharacterFromEvent = async characterId => {\n    if (!editingEvent) return;\n    try {\n      if (editingEvent.id && editingEvent.id <= 1000000) {\n        const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/characters/${characterId}`, {\n          method: 'DELETE',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          setEventCharacters(eventCharacters.filter(id => id !== characterId));\n        }\n      } else {\n        // For new events, just remove from local state\n        setEventCharacters(eventCharacters.filter(id => id !== characterId));\n      }\n    } catch (err) {\n      console.error('Failed to remove character from event:', err);\n    }\n  };\n\n  // Save event changes\n  const handleSaveEvent = async () => {\n    if (!editingEvent) return;\n    try {\n      let updatedEvent = {\n        ...editingEvent\n      };\n\n      // Only process if this is an existing event (not a new temporary one)\n      if (editingEvent.id && editingEvent.id <= 1000000) {\n        // Handle battle map upload if there's a new file\n        if (battleMapFile) {\n          const formData = new FormData();\n          formData.append('battle_map', battleMapFile);\n\n          // Upload the battle map\n          const uploadResponse = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/battle-map`, {\n            method: 'POST',\n            credentials: 'include',\n            body: formData\n          });\n          if (uploadResponse.ok) {\n            const uploadData = await uploadResponse.json();\n            updatedEvent.battle_map_url = uploadData.battle_map_url;\n          } else {\n            throw new Error('Failed to upload battle map');\n          }\n        }\n\n        // Update the event details in the backend\n        const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            title: updatedEvent.title,\n            description: updatedEvent.description,\n            location: updatedEvent.location,\n            position: updatedEvent.position,\n            is_party_location: updatedEvent.isPartyLocation,\n            conditions: updatedEvent.conditions,\n            battle_map_url: updatedEvent.battle_map_url\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update event');\n        }\n        const backendEvent = await response.json();\n        updatedEvent = {\n          ...updatedEvent,\n          battle_map_url: backendEvent.battle_map_url\n        };\n        console.log('Event updated successfully, characters attached:', eventCharacters.length);\n      } else {\n        // For new events that haven't been saved to backend yet\n        console.log('Saving new event with characters:', eventCharacters.length);\n      }\n\n      // Update the event in the events array\n      setEvents(events.map(evt => evt.id === editingEvent.id ? updatedEvent : evt));\n\n      // If it's a selected event, update that too\n      if (selectedEvent && selectedEvent.id === editingEvent.id) {\n        setSelectedEvent(updatedEvent);\n      }\n\n      // Clear editing state\n      setEditingEvent(null);\n      setBattleMapFile(null);\n      setBattleMapPreview(null);\n      alert('Event saved successfully!');\n    } catch (err) {\n      console.error('Failed to save event:', err);\n      alert(`Failed to save event changes: ${err.message}`);\n    }\n  };\n\n  // Cancel event editing\n  const handleCancelEdit = () => {\n    setEditingEvent(null);\n    setBattleMapFile(null);\n    setBattleMapPreview(null);\n    setEventCharacters([]);\n  };\n\n  // Start creating a connection\n  const handleAddConnection = () => {\n    if (!selectedEvent) return;\n    setIsCreatingConnection(true);\n    setConnectionStart(selectedEvent);\n    setSelectedEvent(null);\n  };\n\n  // Delete an event\n  const handleDeleteEvent = () => {\n    if (!selectedEvent) return;\n    if (!window.confirm(`Are you sure you want to delete \"${selectedEvent.title}\"?`)) {\n      return;\n    }\n\n    // Remove the event\n    setEvents(events.filter(e => e.id !== selectedEvent.id));\n\n    // Remove connections to/from this event\n    setConnections(connections.filter(c => c.from !== selectedEvent.id && c.to !== selectedEvent.id));\n    setSelectedEvent(null);\n  };\n\n  // Canvas right-click for new event\n  const handleCanvasContextMenu = e => {\n    e.preventDefault();\n    if (isCreatingConnection) {\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setNewEventPosition({\n      x,\n      y\n    });\n    setIsCreatingEvent(true);\n  };\n\n  // Handle event drag start\n  const handleEventDragStart = (e, event) => {\n    e.stopPropagation();\n    if (isCreatingConnection) return;\n    setIsDragging(true);\n    setDraggedEvent(event);\n    const rect = e.currentTarget.getBoundingClientRect();\n    setDragOffset({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n\n  // Handle mouse move for dragging\n  const handleMouseMove = e => {\n    if (isDragging && draggedEvent) {\n      const rect = canvasRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left - dragOffset.x;\n      const y = e.clientY - rect.top - dragOffset.y;\n      setEvents(events.map(evt => evt.id === draggedEvent.id ? {\n        ...evt,\n        position: {\n          x,\n          y\n        }\n      } : evt));\n    }\n  };\n\n  // Handle mouse up to stop dragging\n  const handleMouseUp = () => {\n    if (isDragging) {\n      setIsDragging(false);\n      setDraggedEvent(null);\n    }\n  };\n\n  // Create a new event\n  const handleCreateEvent = () => {\n    const newEvent = {\n      id: Date.now(),\n      ...newEventData,\n      position: newEventPosition,\n      conditions: []\n    };\n    setEvents([...events, newEvent]);\n    setIsCreatingEvent(false);\n    setNewEventData({\n      title: '',\n      description: '',\n      location: '',\n      isPartyLocation: false\n    });\n  };\n\n  // Handle canvas click to deselect \n  const handleCanvasClick = () => {\n    if (isCreatingConnection) {\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    setSelectedEvent(null);\n  };\n\n  // Cancel event creation\n  const handleCancelCreate = () => {\n    setIsCreatingEvent(false);\n  };\n\n  // Draw connections between events\n  const renderConnections = () => {\n    return connections.map((connection, index) => {\n      const fromEvent = events.find(e => e.id === connection.from);\n      const toEvent = events.find(e => e.id === connection.to);\n      if (!fromEvent || !toEvent) return null;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: fromEvent.position.x + 75,\n        y1: fromEvent.position.y + 25,\n        x2: toEvent.position.x + 75,\n        y2: toEvent.position.y + 25,\n        stroke: connectionStart && connectionStart.id === fromEvent.id ? \"#3498db\" : \"#8b4513\",\n        strokeWidth: \"2\",\n        markerEnd: \"url(#arrowhead)\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // Get character names for display\n  const getCharacterNames = characterIds => {\n    return characterIds.map(id => {\n      var _characters$find;\n      return (_characters$find = characters.find(c => c.id === id)) === null || _characters$find === void 0 ? void 0 : _characters$find.name;\n    }).filter(name => name).join(', ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lore-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lore-map-canvas\",\n      ref: canvasRef,\n      onContextMenu: handleCanvasContextMenu,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      onClick: handleCanvasClick,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"100%\",\n        height: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"arrowhead\",\n            markerWidth: \"10\",\n            markerHeight: \"7\",\n            refX: \"9\",\n            refY: \"3.5\",\n            orient: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"0 0, 10 3.5, 0 7\",\n              fill: \"#8b4513\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), renderConnections()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), events.map(event => {\n        const isAccessible = checkEventConditions(event);\n        const isCompleted = eventStates[`event_${event.id}_completed`] || false;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `event-node \n                ${event.isPartyLocation ? 'party-location' : ''} \n                ${(selectedEvent === null || selectedEvent === void 0 ? void 0 : selectedEvent.id) === event.id ? 'selected' : ''} \n                ${(connectionStart === null || connectionStart === void 0 ? void 0 : connectionStart.id) === event.id ? 'connection-source' : ''}\n                ${!isAccessible ? 'conditional-locked' : ''}\n                ${isCompleted ? 'completed' : ''}\n              `,\n          style: {\n            left: `${event.position.x}px`,\n            top: `${event.position.y}px`\n          },\n          onClick: e => handleEventClick(event, e),\n          onDoubleClick: e => handleEventDoubleClick(event, e),\n          onMouseDown: e => handleEventDragStart(e, event),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-location\",\n            children: event.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this), !isAccessible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator locked\",\n            children: \"\\uD83D\\uDD12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 17\n          }, this), isCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator completed\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 17\n          }, this), event.conditions && event.conditions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator has-conditions\",\n            children: \"\\u2699\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 17\n          }, this), event.battle_map_url && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"condition-indicator has-map\",\n            children: \"\\uD83D\\uDDFA\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 17\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this);\n      }), isCreatingConnection && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-help-text\",\n        children: \"Click on another event to create a connection, or right-click to cancel.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this), selectedEvent && !editingEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-selection-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedEvent.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedEvent.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEventDoubleClick(selectedEvent, {\n            stopPropagation: () => {}\n          }),\n          children: \"Edit Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddConnection,\n          children: \"Add Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteEvent,\n          className: \"delete-button\",\n          children: \"Delete Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleEventCompleted(selectedEvent.id),\n          children: eventStates[`event_${selectedEvent.id}_completed`] ? 'Mark Incomplete' : 'Mark Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 9\n    }, this), editingEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-edit-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-edit-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-edit-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close-btn\",\n            onClick: handleCancelEdit,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-edit-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-edit-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Event Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editingEvent.title,\n                onChange: e => setEditingEvent({\n                  ...editingEvent,\n                  title: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editingEvent.location,\n                onChange: e => setEditingEvent({\n                  ...editingEvent,\n                  location: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: editingEvent.description,\n                onChange: e => setEditingEvent({\n                  ...editingEvent,\n                  description: e.target.value\n                }),\n                rows: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: editingEvent.isPartyLocation,\n                  onChange: e => setEditingEvent({\n                    ...editingEvent,\n                    isPartyLocation: e.target.checked\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 21\n                }, this), \"Party is currently here\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: eventStates[`event_${editingEvent.id}_completed`] || false,\n                  onChange: () => toggleEventCompleted(editingEvent.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 21\n                }, this), \"Mark as completed\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"characters-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Characters Present\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"character-select\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: \"\",\n                  onChange: e => {\n                    if (e.target.value) {\n                      console.log('Adding character:', e.target.value);\n                      handleAddCharacterToEvent(parseInt(e.target.value, 10));\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Add a character...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 23\n                  }, this), characters.filter(char => !eventCharacters.includes(char.id)).map(char => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: char.id,\n                    children: [char.name, \" (\", char.character_type, \")\"]\n                  }, char.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"character-list\",\n                children: eventCharacters.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"no-characters\",\n                  children: \"No characters assigned to this event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"character-name-list\",\n                  children: eventCharacters.map(charId => {\n                    const character = characters.find(c => c.id === charId);\n                    if (!character) {\n                      console.log('Character not found for ID:', charId);\n                      return null;\n                    }\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"character-list-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"character-name\",\n                        children: character.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 760,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"character-type\",\n                        children: [\"(\", character.character_type, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 761,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"remove-character-btn\",\n                        onClick: () => {\n                          console.log('Removing character:', charId);\n                          handleRemoveCharacterFromEvent(charId);\n                        },\n                        title: \"Remove character\",\n                        children: \"\\xD7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 762,\n                        columnNumber: 31\n                      }, this)]\n                    }, charId, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 759,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#666',\n                  marginTop: '10px'\n                },\n                children: [\"Debug: \", eventCharacters.length, \" characters attached. Event ID: \", editingEvent.id, \". Characters: [\", eventCharacters.join(', '), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-edit-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-map-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Battle Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-map-upload\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"battle-map-input\",\n                  accept: \"image/*\",\n                  onChange: handleBattleMapUpload,\n                  style: {\n                    display: 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"battle-map-input\",\n                  className: \"upload-btn\",\n                  children: \"Choose Battle Map Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 19\n              }, this), battleMapPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-map-preview\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: battleMapPreview,\n                  alt: \"Battle Map Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"remove-map-btn\",\n                  onClick: handleRemoveBattleMap,\n                  children: \"Remove Map\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#666',\n                  marginTop: '10px'\n                },\n                children: [\"Debug: Battle map URL: \", editingEvent.battle_map_url || 'None', battleMapFile && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"New file selected: \", battleMapFile.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 820,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(EventConditions, {\n              conditions: editingEvent.conditions || [],\n              onConditionsChange: handleConditionsChange,\n              availableEvents: events.filter(e => e.id !== editingEvent.id),\n              availableCharacters: characters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-edit-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveEvent,\n            className: \"save-btn\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            className: \"cancel-btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 9\n    }, this), isCreatingEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-event-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newEventData.title,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newEventData.location,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newEventData.description,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: newEventData.isPartyLocation,\n            onChange: e => setNewEventData({\n              ...newEventData,\n              isPartyLocation: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 15\n          }, this), \"Party is here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateEvent,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelCreate,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 569,\n    columnNumber: 5\n  }, this);\n};\n_s(LoreMap, \"7/s/+kDNb4ALE+rS0m0lg9Bs+ig=\");\n_c = LoreMap;\nexport default LoreMap;\nvar _c;\n$RefreshReg$(_c, \"LoreMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","EventConditions","config","jsxDEV","_jsxDEV","LoreMap","initialEvents","initialConnections","onChange","loreMapId","_s","events","setEvents","selectedEvent","setSelectedEvent","editingEvent","setEditingEvent","isCreatingEvent","setIsCreatingEvent","newEventPosition","setNewEventPosition","x","y","newEventData","setNewEventData","title","description","location","isPartyLocation","connections","setConnections","isDragging","setIsDragging","draggedEvent","setDraggedEvent","dragOffset","setDragOffset","isCreatingConnection","setIsCreatingConnection","connectionStart","setConnectionStart","characters","setCharacters","eventCharacters","setEventCharacters","eventStates","setEventStates","battleMapFile","setBattleMapFile","battleMapPreview","setBattleMapPreview","canvasRef","id","length","fetchCharacters","response","fetch","apiUrl","method","credentials","ok","data","json","err","console","error","fetchEventCharacters","map","ec","character_id","battle_map_url","checkEventConditions","event","conditions","Array","isArray","JSON","parse","e","warn","every","condition","type","isCompleted","target","required","isFreed","isAlive","customState","toggleEventCompleted","eventId","key","prev","handleEventClick","stopPropagation","newConnection","Date","now","from","to","handleEventDoubleClick","eventToEdit","handleBattleMapUpload","file","files","reader","FileReader","onload","result","readAsDataURL","handleRemoveBattleMap","handleConditionsChange","newConditions","handleAddCharacterToEvent","characterId","includes","headers","body","stringify","role","handleRemoveCharacterFromEvent","filter","handleSaveEvent","updatedEvent","formData","FormData","append","uploadResponse","uploadData","Error","position","is_party_location","backendEvent","log","evt","alert","message","handleCancelEdit","handleAddConnection","handleDeleteEvent","window","confirm","c","handleCanvasContextMenu","preventDefault","rect","current","getBoundingClientRect","clientX","left","clientY","top","handleEventDragStart","currentTarget","handleMouseMove","handleMouseUp","handleCreateEvent","newEvent","handleCanvasClick","handleCancelCreate","renderConnections","connection","index","fromEvent","find","toEvent","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","getCharacterNames","characterIds","_characters$find","name","join","className","children","ref","onContextMenu","onMouseMove","onMouseUp","onMouseLeave","onClick","width","height","markerWidth","markerHeight","refX","refY","orient","points","fill","isAccessible","style","onDoubleClick","onMouseDown","value","rows","checked","parseInt","char","character_type","charId","character","fontSize","color","marginTop","accept","display","htmlFor","src","alt","onConditionsChange","availableEvents","availableCharacters","_c","$RefreshReg$"],"sources":["C:/Users/braed/OneDrive/Desktop/LoreKeep/frontend/src/components/LoreMap/LoreMap.jsx"],"sourcesContent":["// LoreMap.jsx - Complete updated version with battle maps and character management\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './LoreMap.css';\r\nimport EventConditions from './EventConditions';\r\nimport config from '../../config';\r\n\r\nconst LoreMap = ({ initialEvents, initialConnections, onChange, loreMapId }) => {\r\n  const [events, setEvents] = useState(initialEvents || []);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [editingEvent, setEditingEvent] = useState(null);\r\n  const [isCreatingEvent, setIsCreatingEvent] = useState(false);\r\n  const [newEventPosition, setNewEventPosition] = useState({ x: 0, y: 0 });\r\n  const [newEventData, setNewEventData] = useState({\r\n    title: '',\r\n    description: '',\r\n    location: '',\r\n    isPartyLocation: false,\r\n  });\r\n  const [connections, setConnections] = useState(initialConnections || []);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [draggedEvent, setDraggedEvent] = useState(null);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [isCreatingConnection, setIsCreatingConnection] = useState(false);\r\n  const [connectionStart, setConnectionStart] = useState(null);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [eventCharacters, setEventCharacters] = useState([]);\r\n  const [eventStates, setEventStates] = useState({});\r\n  const [battleMapFile, setBattleMapFile] = useState(null);\r\n  const [battleMapPreview, setBattleMapPreview] = useState(null);\r\n  \r\n  const canvasRef = useRef(null);\r\n\r\n  // Update parent component when data changes\r\n  useEffect(() => {\r\n    if (onChange) {\r\n      onChange({\r\n        id: loreMapId,\r\n        events: events,\r\n        connections: connections\r\n      });\r\n    }\r\n  }, [events, connections, onChange, loreMapId]);\r\n\r\n  // Initialize from props\r\n  useEffect(() => {\r\n    if (initialEvents && initialEvents.length > 0) {\r\n      setEvents(initialEvents);\r\n    }\r\n    if (initialConnections && initialConnections.length > 0) {\r\n      setConnections(initialConnections);\r\n    }\r\n  }, [initialEvents, initialConnections]);\r\n\r\n  // Fetch characters\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      try {\r\n        const response = await fetch(`${config.apiUrl}/api/characters`, {\r\n          method: 'GET',\r\n          credentials: 'include'\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setCharacters(data);\r\n        }\r\n      } catch (err) {\r\n        console.error('Failed to fetch characters:', err);\r\n      }\r\n    };\r\n    \r\n    fetchCharacters();\r\n  }, []);\r\n\r\n  // Fetch event characters when editing an event\r\n  useEffect(() => {\r\n    if (editingEvent && editingEvent.id && editingEvent.id <= 1000000) {\r\n      const fetchEventCharacters = async () => {\r\n        try {\r\n          const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/characters`, {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n          });\r\n          \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setEventCharacters(data.map(ec => ec.character_id));\r\n          }\r\n        } catch (err) {\r\n          console.error('Failed to fetch event characters:', err);\r\n        }\r\n      };\r\n      \r\n      fetchEventCharacters();\r\n      \r\n      // Set battle map preview if event has one\r\n      if (editingEvent.battle_map_url) {\r\n        setBattleMapPreview(`${config.apiUrl}${editingEvent.battle_map_url}`);\r\n      }\r\n    } else {\r\n      setEventCharacters([]);\r\n      setBattleMapPreview(null);\r\n    }\r\n  }, [editingEvent]);\r\n\r\n  // Check if event conditions are met\r\n  const checkEventConditions = (event) => {\r\n    let conditions = [];\r\n    \r\n    // Handle different types of conditions data\r\n    if (event.conditions) {\r\n      if (Array.isArray(event.conditions)) {\r\n        // Already an array\r\n        conditions = event.conditions;\r\n      } else if (typeof event.conditions === 'string') {\r\n        // It's a JSON string, parse it\r\n        try {\r\n          conditions = JSON.parse(event.conditions);\r\n        } catch (e) {\r\n          console.warn('Failed to parse conditions:', event.conditions);\r\n          conditions = [];\r\n        }\r\n      } else if (typeof event.conditions === 'object') {\r\n        // It's already an object but not an array\r\n        conditions = [event.conditions];\r\n      }\r\n    }\r\n    \r\n    if (!conditions || conditions.length === 0) {\r\n      return true;\r\n    }\r\n    \r\n    return conditions.every(condition => {\r\n      switch (condition.type) {\r\n        case 'event_completed':\r\n          const isCompleted = eventStates[`event_${condition.target}_completed`] || false;\r\n          return condition.required ? isCompleted : !isCompleted;\r\n          \r\n        case 'character_freed':\r\n          const isFreed = eventStates[`character_${condition.target}_freed`] || false;\r\n          return condition.required ? isFreed : !isFreed;\r\n          \r\n        case 'character_alive':\r\n          const isAlive = eventStates[`character_${condition.target}_alive`] !== false;\r\n          return condition.required ? isAlive : !isAlive;\r\n          \r\n        case 'custom':\r\n          const customState = eventStates[`custom_${condition.id}`] || false;\r\n          return condition.required ? customState : !customState;\r\n          \r\n        default:\r\n          return true;\r\n      }\r\n    });\r\n  };\r\n\r\n  // Toggle event completion state\r\n  const toggleEventCompleted = (eventId) => {\r\n    const key = `event_${eventId}_completed`;\r\n    setEventStates(prev => ({\r\n      ...prev,\r\n      [key]: !prev[key]\r\n    }));\r\n  };\r\n\r\n  // Handle single click - just select/highlight\r\n  const handleEventClick = (event, e) => {\r\n    e.stopPropagation();\r\n    \r\n    // If in connection creation mode, complete the connection\r\n    if (isCreatingConnection && connectionStart && connectionStart.id !== event.id) {\r\n      const newConnection = {\r\n        id: Date.now(),\r\n        from: connectionStart.id,\r\n        to: event.id,\r\n        description: ''\r\n      };\r\n      \r\n      setConnections([...connections, newConnection]);\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    setSelectedEvent(event);\r\n  };\r\n\r\n  // Handle double click - open edit modal\r\n  const handleEventDoubleClick = (event, e) => {\r\n    e.stopPropagation();\r\n    \r\n    if (isCreatingConnection) return; // Don't open edit in connection mode\r\n    \r\n    // Parse the event data properly\r\n    const eventToEdit = {\r\n      ...event,\r\n      conditions: event.conditions || []\r\n    };\r\n    \r\n    setEditingEvent(eventToEdit);\r\n    setBattleMapFile(null);\r\n    \r\n    // Set battle map preview if event has one\r\n    if (event.battle_map_url) {\r\n      setBattleMapPreview(`${config.apiUrl}${event.battle_map_url}`);\r\n    } else {\r\n      setBattleMapPreview(null);\r\n    }\r\n  };\r\n\r\n  // Handle battle map file upload\r\n  const handleBattleMapUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setBattleMapFile(file);\r\n      \r\n      // Create preview\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setBattleMapPreview(e.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Remove battle map\r\n  const handleRemoveBattleMap = async () => {\r\n    if (editingEvent && editingEvent.id && editingEvent.id <= 1000000) {\r\n      try {\r\n        const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/battle-map`, {\r\n          method: 'DELETE',\r\n          credentials: 'include'\r\n        });\r\n        \r\n        if (response.ok) {\r\n          setBattleMapFile(null);\r\n          setBattleMapPreview(null);\r\n          setEditingEvent({\r\n            ...editingEvent,\r\n            battle_map_url: null\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error('Failed to remove battle map:', err);\r\n      }\r\n    } else {\r\n      // For new events, just clear locally\r\n      setBattleMapFile(null);\r\n      setBattleMapPreview(null);\r\n      if (editingEvent) {\r\n        setEditingEvent({\r\n          ...editingEvent,\r\n          battle_map_url: null\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle conditions change for editing event\r\n  const handleConditionsChange = (newConditions) => {\r\n    if (!editingEvent) return;\r\n    \r\n    setEditingEvent({\r\n      ...editingEvent,\r\n      conditions: newConditions\r\n    });\r\n  };\r\n\r\n  // Add character to event\r\n  const handleAddCharacterToEvent = async (characterId) => {\r\n    if (!editingEvent || !characterId || eventCharacters.includes(characterId)) return;\r\n    \r\n    try {\r\n      if (editingEvent.id && editingEvent.id <= 1000000) {\r\n        const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/characters`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify({\r\n            character_id: characterId,\r\n            role: 'present'\r\n          })\r\n        });\r\n        \r\n        if (response.ok) {\r\n          setEventCharacters([...eventCharacters, characterId]);\r\n        }\r\n      } else {\r\n        // For new events, just add to local state\r\n        setEventCharacters([...eventCharacters, characterId]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to add character to event:', err);\r\n    }\r\n  };\r\n\r\n  // Remove character from event\r\n  const handleRemoveCharacterFromEvent = async (characterId) => {\r\n    if (!editingEvent) return;\r\n    \r\n    try {\r\n      if (editingEvent.id && editingEvent.id <= 1000000) {\r\n        const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/characters/${characterId}`, {\r\n          method: 'DELETE',\r\n          credentials: 'include'\r\n        });\r\n        \r\n        if (response.ok) {\r\n          setEventCharacters(eventCharacters.filter(id => id !== characterId));\r\n        }\r\n      } else {\r\n        // For new events, just remove from local state\r\n        setEventCharacters(eventCharacters.filter(id => id !== characterId));\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to remove character from event:', err);\r\n    }\r\n  };\r\n\r\n  // Save event changes\r\n  const handleSaveEvent = async () => {\r\n    if (!editingEvent) return;\r\n    \r\n    try {\r\n      let updatedEvent = { ...editingEvent };\r\n      \r\n      // Only process if this is an existing event (not a new temporary one)\r\n      if (editingEvent.id && editingEvent.id <= 1000000) {\r\n        // Handle battle map upload if there's a new file\r\n        if (battleMapFile) {\r\n          const formData = new FormData();\r\n          formData.append('battle_map', battleMapFile);\r\n          \r\n          // Upload the battle map\r\n          const uploadResponse = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}/battle-map`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            body: formData\r\n          });\r\n          \r\n          if (uploadResponse.ok) {\r\n            const uploadData = await uploadResponse.json();\r\n            updatedEvent.battle_map_url = uploadData.battle_map_url;\r\n          } else {\r\n            throw new Error('Failed to upload battle map');\r\n          }\r\n        }\r\n        \r\n        // Update the event details in the backend\r\n        const response = await fetch(`${config.apiUrl}/api/events/${editingEvent.id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify({\r\n            title: updatedEvent.title,\r\n            description: updatedEvent.description,\r\n            location: updatedEvent.location,\r\n            position: updatedEvent.position,\r\n            is_party_location: updatedEvent.isPartyLocation,\r\n            conditions: updatedEvent.conditions,\r\n            battle_map_url: updatedEvent.battle_map_url\r\n          })\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to update event');\r\n        }\r\n        \r\n        const backendEvent = await response.json();\r\n        updatedEvent = {\r\n          ...updatedEvent,\r\n          battle_map_url: backendEvent.battle_map_url\r\n        };\r\n        \r\n        console.log('Event updated successfully, characters attached:', eventCharacters.length);\r\n        \r\n      } else {\r\n        // For new events that haven't been saved to backend yet\r\n        console.log('Saving new event with characters:', eventCharacters.length);\r\n      }\r\n      \r\n      // Update the event in the events array\r\n      setEvents(events.map(evt => \r\n        evt.id === editingEvent.id ? updatedEvent : evt\r\n      ));\r\n      \r\n      // If it's a selected event, update that too\r\n      if (selectedEvent && selectedEvent.id === editingEvent.id) {\r\n        setSelectedEvent(updatedEvent);\r\n      }\r\n      \r\n      // Clear editing state\r\n      setEditingEvent(null);\r\n      setBattleMapFile(null);\r\n      setBattleMapPreview(null);\r\n      \r\n      alert('Event saved successfully!');\r\n      \r\n    } catch (err) {\r\n      console.error('Failed to save event:', err);\r\n      alert(`Failed to save event changes: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  // Cancel event editing\r\n  const handleCancelEdit = () => {\r\n    setEditingEvent(null);\r\n    setBattleMapFile(null);\r\n    setBattleMapPreview(null);\r\n    setEventCharacters([]);\r\n  };\r\n\r\n  // Start creating a connection\r\n  const handleAddConnection = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    setIsCreatingConnection(true);\r\n    setConnectionStart(selectedEvent);\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Delete an event\r\n  const handleDeleteEvent = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    if (!window.confirm(`Are you sure you want to delete \"${selectedEvent.title}\"?`)) {\r\n      return;\r\n    }\r\n    \r\n    // Remove the event\r\n    setEvents(events.filter(e => e.id !== selectedEvent.id));\r\n    \r\n    // Remove connections to/from this event\r\n    setConnections(connections.filter(\r\n      c => c.from !== selectedEvent.id && c.to !== selectedEvent.id\r\n    ));\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Canvas right-click for new event\r\n  const handleCanvasContextMenu = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (isCreatingConnection) {\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    setNewEventPosition({ x, y });\r\n    setIsCreatingEvent(true);\r\n  };\r\n\r\n  // Handle event drag start\r\n  const handleEventDragStart = (e, event) => {\r\n    e.stopPropagation();\r\n    \r\n    if (isCreatingConnection) return;\r\n    \r\n    setIsDragging(true);\r\n    setDraggedEvent(event);\r\n    \r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    setDragOffset({\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top,\r\n    });\r\n  };\r\n\r\n  // Handle mouse move for dragging\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && draggedEvent) {\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - dragOffset.x;\r\n      const y = e.clientY - rect.top - dragOffset.y;\r\n      \r\n      setEvents(events.map(evt => \r\n        evt.id === draggedEvent.id \r\n          ? { ...evt, position: { x, y } } \r\n          : evt\r\n      ));\r\n    }\r\n  };\r\n\r\n  // Handle mouse up to stop dragging\r\n  const handleMouseUp = () => {\r\n    if (isDragging) {\r\n      setIsDragging(false);\r\n      setDraggedEvent(null);\r\n    }\r\n  };\r\n\r\n  // Create a new event\r\n  const handleCreateEvent = () => {\r\n    const newEvent = {\r\n      id: Date.now(),\r\n      ...newEventData,\r\n      position: newEventPosition,\r\n      conditions: []\r\n    };\r\n    \r\n    setEvents([...events, newEvent]);\r\n    setIsCreatingEvent(false);\r\n    setNewEventData({\r\n      title: '',\r\n      description: '',\r\n      location: '',\r\n      isPartyLocation: false,\r\n    });\r\n  };\r\n\r\n  // Handle canvas click to deselect \r\n  const handleCanvasClick = () => {\r\n    if (isCreatingConnection) {\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Cancel event creation\r\n  const handleCancelCreate = () => {\r\n    setIsCreatingEvent(false);\r\n  };\r\n\r\n  // Draw connections between events\r\n  const renderConnections = () => {\r\n    return connections.map((connection, index) => {\r\n      const fromEvent = events.find(e => e.id === connection.from);\r\n      const toEvent = events.find(e => e.id === connection.to);\r\n      \r\n      if (!fromEvent || !toEvent) return null;\r\n      \r\n      return (\r\n        <line\r\n          key={index}\r\n          x1={fromEvent.position.x + 75}\r\n          y1={fromEvent.position.y + 25}\r\n          x2={toEvent.position.x + 75}\r\n          y2={toEvent.position.y + 25}\r\n          stroke={connectionStart && connectionStart.id === fromEvent.id ? \"#3498db\" : \"#8b4513\"}\r\n          strokeWidth=\"2\"\r\n          markerEnd=\"url(#arrowhead)\"\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  // Get character names for display\r\n  const getCharacterNames = (characterIds) => {\r\n    return characterIds\r\n      .map(id => characters.find(c => c.id === id)?.name)\r\n      .filter(name => name)\r\n      .join(', ');\r\n  };\r\n\r\n  return (\r\n    <div className=\"lore-map-container\">\r\n      <div \r\n        className=\"lore-map-canvas\" \r\n        ref={canvasRef}\r\n        onContextMenu={handleCanvasContextMenu}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onMouseLeave={handleMouseUp}\r\n        onClick={handleCanvasClick}\r\n      >\r\n        <svg width=\"100%\" height=\"100%\">\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"9\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n            >\r\n              <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#8b4513\" />\r\n            </marker>\r\n          </defs>\r\n          {renderConnections()}\r\n        </svg>\r\n        \r\n        {events.map(event => {\r\n          const isAccessible = checkEventConditions(event);\r\n          const isCompleted = eventStates[`event_${event.id}_completed`] || false;\r\n          \r\n          return (\r\n            <div\r\n              key={event.id}\r\n              className={`event-node \r\n                ${event.isPartyLocation ? 'party-location' : ''} \r\n                ${selectedEvent?.id === event.id ? 'selected' : ''} \r\n                ${connectionStart?.id === event.id ? 'connection-source' : ''}\r\n                ${!isAccessible ? 'conditional-locked' : ''}\r\n                ${isCompleted ? 'completed' : ''}\r\n              `}\r\n              style={{\r\n                left: `${event.position.x}px`,\r\n                top: `${event.position.y}px`,\r\n              }}\r\n              onClick={(e) => handleEventClick(event, e)}\r\n              onDoubleClick={(e) => handleEventDoubleClick(event, e)}\r\n              onMouseDown={(e) => handleEventDragStart(e, event)}\r\n            >\r\n              <h3>{event.title}</h3>\r\n              <div className=\"event-location\">{event.location}</div>\r\n              \r\n              {/* Show condition indicators */}\r\n              {!isAccessible && (\r\n                <div className=\"condition-indicator locked\">🔒</div>\r\n              )}\r\n              {isCompleted && (\r\n                <div className=\"condition-indicator completed\">✓</div>\r\n              )}\r\n              {event.conditions && event.conditions.length > 0 && (\r\n                <div className=\"condition-indicator has-conditions\">⚙️</div>\r\n              )}\r\n              {event.battle_map_url && (\r\n                <div className=\"condition-indicator has-map\">🗺️</div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n        \r\n        {isCreatingConnection && (\r\n          <div className=\"connection-help-text\">\r\n            Click on another event to create a connection, or right-click to cancel.\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Simple selection panel - only shows when event is selected but not editing */}\r\n      {selectedEvent && !editingEvent && (\r\n        <div className=\"event-selection-panel\">\r\n          <h3>{selectedEvent.title}</h3>\r\n          <p>{selectedEvent.location}</p>\r\n          <div className=\"selection-actions\">\r\n            <button onClick={() => handleEventDoubleClick(selectedEvent, { stopPropagation: () => {} })}>\r\n              Edit Event\r\n            </button>\r\n            <button onClick={handleAddConnection}>Add Connection</button>\r\n            <button onClick={handleDeleteEvent} className=\"delete-button\">\r\n              Delete Event\r\n            </button>\r\n            <button onClick={() => toggleEventCompleted(selectedEvent.id)}>\r\n              {eventStates[`event_${selectedEvent.id}_completed`] ? 'Mark Incomplete' : 'Mark Complete'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n                {/* Event editing modal */}\r\n      {editingEvent && (\r\n        <div className=\"event-edit-modal-overlay\">\r\n          <div className=\"event-edit-modal\">\r\n            <div className=\"event-edit-header\">\r\n              <h2>Edit Event</h2>\r\n              <button className=\"modal-close-btn\" onClick={handleCancelEdit}>×</button>\r\n            </div>\r\n            \r\n            <div className=\"event-edit-content\">\r\n              <div className=\"event-edit-left\">\r\n                <div className=\"form-group\">\r\n                  <label>Event Title:</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={editingEvent.title}\r\n                    onChange={(e) => setEditingEvent({...editingEvent, title: e.target.value})}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Location:</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={editingEvent.location}\r\n                    onChange={(e) => setEditingEvent({...editingEvent, location: e.target.value})}\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Description:</label>\r\n                  <textarea \r\n                    value={editingEvent.description}\r\n                    onChange={(e) => setEditingEvent({...editingEvent, description: e.target.value})}\r\n                    rows=\"6\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group checkbox-group\">\r\n                  <label>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      checked={editingEvent.isPartyLocation}\r\n                      onChange={(e) => setEditingEvent({...editingEvent, isPartyLocation: e.target.checked})}\r\n                    />\r\n                    Party is currently here\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"form-group checkbox-group\">\r\n                  <label>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      checked={eventStates[`event_${editingEvent.id}_completed`] || false}\r\n                      onChange={() => toggleEventCompleted(editingEvent.id)}\r\n                    />\r\n                    Mark as completed\r\n                  </label>\r\n                </div>\r\n                \r\n                {/* Characters Section */}\r\n                <div className=\"characters-section\">\r\n                  <h3>Characters Present</h3>\r\n                  <div className=\"character-select\">\r\n                    <select \r\n                      value=\"\" \r\n                      onChange={(e) => {\r\n                        if (e.target.value) {\r\n                          console.log('Adding character:', e.target.value);\r\n                          handleAddCharacterToEvent(parseInt(e.target.value, 10));\r\n                        }\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Add a character...</option>\r\n                      {characters\r\n                        .filter(char => !eventCharacters.includes(char.id))\r\n                        .map(char => (\r\n                          <option key={char.id} value={char.id}>{char.name} ({char.character_type})</option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div className=\"character-list\">\r\n                    {eventCharacters.length === 0 ? (\r\n                      <p className=\"no-characters\">No characters assigned to this event</p>\r\n                    ) : (\r\n                      <ul className=\"character-name-list\">\r\n                        {eventCharacters.map(charId => {\r\n                          const character = characters.find(c => c.id === charId);\r\n                          if (!character) {\r\n                            console.log('Character not found for ID:', charId);\r\n                            return null;\r\n                          }\r\n                          \r\n                          return (\r\n                            <li key={charId} className=\"character-list-item\">\r\n                              <span className=\"character-name\">{character.name}</span>\r\n                              <span className=\"character-type\">({character.character_type})</span>\r\n                              <button \r\n                                className=\"remove-character-btn\"\r\n                                onClick={() => {\r\n                                  console.log('Removing character:', charId);\r\n                                  handleRemoveCharacterFromEvent(charId);\r\n                                }}\r\n                                title=\"Remove character\"\r\n                              >\r\n                                ×\r\n                              </button>\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {/* Debug info */}\r\n                  <div style={{ fontSize: '12px', color: '#666', marginTop: '10px' }}>\r\n                    Debug: {eventCharacters.length} characters attached. \r\n                    Event ID: {editingEvent.id}. \r\n                    Characters: [{eventCharacters.join(', ')}]\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"event-edit-right\">\r\n                {/* Battle Map Section */}\r\n                <div className=\"battle-map-section\">\r\n                  <h3>Battle Map</h3>\r\n                  <div className=\"battle-map-upload\">\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"battle-map-input\"\r\n                      accept=\"image/*\"\r\n                      onChange={handleBattleMapUpload}\r\n                      style={{ display: 'none' }}\r\n                    />\r\n                    <label htmlFor=\"battle-map-input\" className=\"upload-btn\">\r\n                      Choose Battle Map Image\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  {battleMapPreview && (\r\n                    <div className=\"battle-map-preview\">\r\n                      <img src={battleMapPreview} alt=\"Battle Map Preview\" />\r\n                      <button \r\n                        className=\"remove-map-btn\"\r\n                        onClick={handleRemoveBattleMap}\r\n                      >\r\n                        Remove Map\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* Debug info */}\r\n                  <div style={{ fontSize: '12px', color: '#666', marginTop: '10px' }}>\r\n                    Debug: Battle map URL: {editingEvent.battle_map_url || 'None'}\r\n                    {battleMapFile && <div>New file selected: {battleMapFile.name}</div>}\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Event Conditions */}\r\n                <EventConditions\r\n                  conditions={editingEvent.conditions || []}\r\n                  onConditionsChange={handleConditionsChange}\r\n                  availableEvents={events.filter(e => e.id !== editingEvent.id)}\r\n                  availableCharacters={characters}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"event-edit-actions\">\r\n              <button onClick={handleSaveEvent} className=\"save-btn\">Save Changes</button>\r\n              <button onClick={handleCancelEdit} className=\"cancel-btn\">Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Event creation modal */}\r\n      {isCreatingEvent && (\r\n        <div className=\"create-event-modal\">\r\n          <h3>Create New Event</h3>\r\n          <div className=\"form-group\">\r\n            <label>Title:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={newEventData.title} \r\n              onChange={(e) => setNewEventData({...newEventData, title: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Location:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={newEventData.location} \r\n              onChange={(e) => setNewEventData({...newEventData, location: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <textarea \r\n              value={newEventData.description} \r\n              onChange={(e) => setNewEventData({...newEventData, description: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={newEventData.isPartyLocation} \r\n                onChange={(e) => setNewEventData({...newEventData, isPartyLocation: e.target.checked})}\r\n              />\r\n              Party is here\r\n            </label>\r\n          </div>\r\n          <div className=\"modal-actions\">\r\n            <button onClick={handleCreateEvent}>Create</button>\r\n            <button onClick={handleCancelCreate}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoreMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}