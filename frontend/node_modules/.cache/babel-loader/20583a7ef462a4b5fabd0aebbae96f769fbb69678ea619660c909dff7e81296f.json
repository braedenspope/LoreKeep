{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\braed\\\\OneDrive\\\\Desktop\\\\LoreKeep\\\\frontend\\\\src\\\\components\\\\LoreMap\\\\LoreMap.jsx\",\n  _s = $RefreshSig$();\n// LoreMap.jsx - Add more functionality and data handling\nimport React, { useState, useEffect, useRef } from 'react';\nimport './LoreMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoreMap = ({\n  initialEvents,\n  initialConnections,\n  onChange,\n  loreMapId\n}) => {\n  _s();\n  var _window$event, _window$event2;\n  const [events, setEvents] = useState(initialEvents || []);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [isCreatingEvent, setIsCreatingEvent] = useState(false);\n  const [newEventPosition, setNewEventPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [newEventData, setNewEventData] = useState({\n    title: '',\n    description: '',\n    location: '',\n    isPartyLocation: false\n  });\n  const [connections, setConnections] = useState(initialConnections || []);\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggedEvent, setDraggedEvent] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isCreatingConnection, setIsCreatingConnection] = useState(false);\n  const [connectionStart, setConnectionStart] = useState(null);\n  const canvasRef = useRef(null);\n\n  // Update parent component when data changes\n  useEffect(() => {\n    if (onChange) {\n      onChange({\n        id: loreMapId,\n        events: events,\n        connections: connections\n      });\n    }\n  }, [events, connections, onChange, loreMapId]);\n\n  // Initialize from props\n  useEffect(() => {\n    if (initialEvents && initialEvents.length > 0) {\n      setEvents(initialEvents);\n    }\n    if (initialConnections && initialConnections.length > 0) {\n      setConnections(initialConnections);\n    }\n  }, [initialEvents, initialConnections]);\n\n  // Add these to your state variables\n  const [characters, setCharacters] = useState([]);\n  const [eventCharacters, setEventCharacters] = useState([]);\n\n  // Add this useEffect to fetch characters\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/characters', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setCharacters(data);\n        }\n      } catch (err) {\n        console.error('Failed to fetch characters:', err);\n      }\n    };\n    fetchCharacters();\n  }, []);\n\n  // Add this when an event is selected\n  useEffect(() => {\n    if (selectedEvent && selectedEvent.id) {\n      const fetchEventCharacters = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters`, {\n            method: 'GET',\n            credentials: 'include'\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setEventCharacters(data.map(ec => ec.character_id));\n          }\n        } catch (err) {\n          console.error('Failed to fetch event characters:', err);\n        }\n      };\n      fetchEventCharacters();\n    } else {\n      setEventCharacters([]);\n    }\n  }, [selectedEvent]);\n\n  // Add character to event\n  const handleAddCharacterToEvent = async characterId => {\n    if (!selectedEvent || !characterId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          character_id: characterId,\n          role: 'present'\n        })\n      });\n      if (response.ok) {\n        setEventCharacters([...eventCharacters, characterId]);\n      }\n    } catch (err) {\n      console.error('Failed to add character to event:', err);\n    }\n  };\n\n  // Remove character from event\n  const handleRemoveCharacterFromEvent = async characterId => {\n    if (!selectedEvent) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters/${characterId}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setEventCharacters(eventCharacters.filter(id => id !== characterId));\n      }\n    } catch (err) {\n      console.error('Failed to remove character from event:', err);\n    }\n  };\n\n  // Canvas right-click for new event\n  const handleCanvasContextMenu = e => {\n    e.preventDefault();\n\n    // If in connection mode, cancel it\n    if (isCreatingConnection) {\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setNewEventPosition({\n      x,\n      y\n    });\n    setIsCreatingEvent(true);\n  };\n\n  // Handle event click\n  const handleEventClick = (event, e) => {\n    e.stopPropagation();\n\n    // If in connection creation mode, complete the connection\n    if (isCreatingConnection && connectionStart && connectionStart.id !== event.id) {\n      // Create a new connection\n      const newConnection = {\n        id: Date.now(),\n        // Temporary ID, will be replaced when saved to backend\n        from: connectionStart.id,\n        to: event.id,\n        description: ''\n      };\n      setConnections([...connections, newConnection]);\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    setSelectedEvent(event);\n  };\n\n  // Start creating a connection\n  const handleAddConnection = () => {\n    if (!selectedEvent) return;\n    setIsCreatingConnection(true);\n    setConnectionStart(selectedEvent);\n    setSelectedEvent(null);\n  };\n\n  // Delete an event\n  const handleDeleteEvent = () => {\n    if (!selectedEvent) return;\n\n    // Remove the event\n    setEvents(events.filter(e => e.id !== selectedEvent.id));\n\n    // Remove connections to/from this event\n    setConnections(connections.filter(c => c.from !== selectedEvent.id && c.to !== selectedEvent.id));\n    setSelectedEvent(null);\n  };\n\n  // Handle event drag start\n  const handleEventDragStart = (e, event) => {\n    e.stopPropagation();\n\n    // Don't start dragging if in connection mode\n    if (isCreatingConnection) return;\n    setIsDragging(true);\n    setDraggedEvent(event);\n    const rect = e.currentTarget.getBoundingClientRect();\n    setDragOffset({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n\n  // Handle mouse move for dragging\n  const handleMouseMove = e => {\n    if (isDragging && draggedEvent) {\n      const rect = canvasRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left - dragOffset.x;\n      const y = e.clientY - rect.top - dragOffset.y;\n      setEvents(events.map(evt => evt.id === draggedEvent.id ? {\n        ...evt,\n        position: {\n          x,\n          y\n        }\n      } : evt));\n    }\n  };\n\n  // Handle mouse up to stop dragging\n  const handleMouseUp = () => {\n    if (isDragging) {\n      setIsDragging(false);\n      setDraggedEvent(null);\n    }\n  };\n\n  // Create a new event\n  const handleCreateEvent = () => {\n    const newEvent = {\n      id: Date.now(),\n      // Temporary ID, will be replaced when saved to backend\n      ...newEventData,\n      position: newEventPosition\n    };\n    setEvents([...events, newEvent]);\n    setIsCreatingEvent(false);\n    setNewEventData({\n      title: '',\n      description: '',\n      location: '',\n      isPartyLocation: false\n    });\n  };\n\n  // Update event\n  const handleUpdateEvent = () => {\n    if (!selectedEvent) return;\n    setEvents(events.map(evt => evt.id === selectedEvent.id ? {\n      ...selectedEvent\n    } : evt));\n    setSelectedEvent(null);\n  };\n\n  // Handle canvas click to deselect \n  const handleCanvasClick = () => {\n    // If in connection mode, cancel it\n    if (isCreatingConnection) {\n      setIsCreatingConnection(false);\n      setConnectionStart(null);\n      return;\n    }\n    setSelectedEvent(null);\n  };\n\n  // Cancel event creation\n  const handleCancelCreate = () => {\n    setIsCreatingEvent(false);\n  };\n\n  // Draw connections between events\n  const renderConnections = () => {\n    return connections.map((connection, index) => {\n      const fromEvent = events.find(e => e.id === connection.from);\n      const toEvent = events.find(e => e.id === connection.to);\n      if (!fromEvent || !toEvent) return null;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: fromEvent.position.x + 75,\n        y1: fromEvent.position.y + 25,\n        x2: toEvent.position.x + 75,\n        y2: toEvent.position.y + 25,\n        stroke: connectionStart && connectionStart.id === fromEvent.id ? \"#3498db\" : \"#666\",\n        strokeWidth: \"2\",\n        markerEnd: \"url(#arrowhead)\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lore-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lore-map-canvas\",\n      ref: canvasRef,\n      onContextMenu: handleCanvasContextMenu,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      onClick: handleCanvasClick,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"100%\",\n        height: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"arrowhead\",\n            markerWidth: \"10\",\n            markerHeight: \"7\",\n            refX: \"9\",\n            refY: \"3.5\",\n            orient: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"0 0, 10 3.5, 0 7\",\n              fill: \"#666\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), renderConnections(), isCreatingConnection && connectionStart && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: connectionStart.position.x + 75,\n          y1: connectionStart.position.y + 25,\n          x2: isDragging ? draggedEvent.position.x + 75 : ((_window$event = window.event) === null || _window$event === void 0 ? void 0 : _window$event.clientX) - canvasRef.current.getBoundingClientRect().left,\n          y2: isDragging ? draggedEvent.position.y + 25 : ((_window$event2 = window.event) === null || _window$event2 === void 0 ? void 0 : _window$event2.clientY) - canvasRef.current.getBoundingClientRect().top,\n          stroke: \"#3498db\",\n          strokeWidth: \"2\",\n          strokeDasharray: \"5,5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `event-node ${event.isPartyLocation ? 'party-location' : ''} ${(selectedEvent === null || selectedEvent === void 0 ? void 0 : selectedEvent.id) === event.id ? 'selected' : ''} ${(connectionStart === null || connectionStart === void 0 ? void 0 : connectionStart.id) === event.id ? 'connection-source' : ''}`,\n        style: {\n          left: `${event.position.x}px`,\n          top: `${event.position.y}px`\n        },\n        onClick: e => handleEventClick(event, e),\n        onMouseDown: e => handleEventDragStart(e, event),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-location\",\n          children: event.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)), isCreatingConnection && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-help-text\",\n        children: \"Click on another event to create a connection, or right-click to cancel.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-details-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedEvent.title,\n          onChange: e => setSelectedEvent({\n            ...selectedEvent,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedEvent.location,\n          onChange: e => setSelectedEvent({\n            ...selectedEvent,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: selectedEvent.description,\n          onChange: e => setSelectedEvent({\n            ...selectedEvent,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedEvent.isPartyLocation,\n            onChange: e => setSelectedEvent({\n              ...selectedEvent,\n              isPartyLocation: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), \"Party is here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-characters\",\n        children: [\"`      \", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Characters Present\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-select\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: \"\",\n            onChange: e => {\n              if (e.target.value) handleAddCharacterToEvent(parseInt(e.target.value, 10));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Add a character...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), characters.map(char => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: char.id,\n              children: char.name\n            }, char.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-list\",\n          children: eventCharacters.map(charId => {\n            const character = characters.find(c => c.id === charId);\n            if (!character) return null;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-character-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: character.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"character-type-badge\",\n                children: character.character_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-character-btn\",\n                onClick: () => handleRemoveCharacterFromEvent(charId),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this)]\n            }, charId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateEvent,\n          children: \"Update Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddConnection,\n          children: \"Add Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: handleDeleteEvent,\n          children: \"Delete Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }, this), isCreatingEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-event-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newEventData.title,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newEventData.location,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newEventData.description,\n          onChange: e => setNewEventData({\n            ...newEventData,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: newEventData.isPartyLocation,\n            onChange: e => setNewEventData({\n              ...newEventData,\n              isPartyLocation: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), \"Party is here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateEvent,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelCreate,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(LoreMap, \"JGl66O9/xT/iqLJkghdAOsr5VI0=\");\n_c = LoreMap;\nexport default LoreMap;\nvar _c;\n$RefreshReg$(_c, \"LoreMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","LoreMap","initialEvents","initialConnections","onChange","loreMapId","_s","_window$event","_window$event2","events","setEvents","selectedEvent","setSelectedEvent","isCreatingEvent","setIsCreatingEvent","newEventPosition","setNewEventPosition","x","y","newEventData","setNewEventData","title","description","location","isPartyLocation","connections","setConnections","isDragging","setIsDragging","draggedEvent","setDraggedEvent","dragOffset","setDragOffset","isCreatingConnection","setIsCreatingConnection","connectionStart","setConnectionStart","canvasRef","id","length","characters","setCharacters","eventCharacters","setEventCharacters","fetchCharacters","response","fetch","method","credentials","ok","data","json","err","console","error","fetchEventCharacters","map","ec","character_id","handleAddCharacterToEvent","characterId","headers","body","JSON","stringify","role","handleRemoveCharacterFromEvent","filter","handleCanvasContextMenu","e","preventDefault","rect","current","getBoundingClientRect","clientX","left","clientY","top","handleEventClick","event","stopPropagation","newConnection","Date","now","from","to","handleAddConnection","handleDeleteEvent","c","handleEventDragStart","currentTarget","handleMouseMove","evt","position","handleMouseUp","handleCreateEvent","newEvent","handleUpdateEvent","handleCanvasClick","handleCancelCreate","renderConnections","connection","index","fromEvent","find","toEvent","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","className","children","ref","onContextMenu","onMouseMove","onMouseUp","onMouseLeave","onClick","width","height","markerWidth","markerHeight","refX","refY","orient","points","fill","window","strokeDasharray","style","onMouseDown","type","value","target","checked","parseInt","char","name","charId","character","character_type","_c","$RefreshReg$"],"sources":["C:/Users/braed/OneDrive/Desktop/LoreKeep/frontend/src/components/LoreMap/LoreMap.jsx"],"sourcesContent":["// LoreMap.jsx - Add more functionality and data handling\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './LoreMap.css';\r\n\r\nconst LoreMap = ({ initialEvents, initialConnections, onChange, loreMapId }) => {\r\n  const [events, setEvents] = useState(initialEvents || []);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [isCreatingEvent, setIsCreatingEvent] = useState(false);\r\n  const [newEventPosition, setNewEventPosition] = useState({ x: 0, y: 0 });\r\n  const [newEventData, setNewEventData] = useState({\r\n    title: '',\r\n    description: '',\r\n    location: '',\r\n    isPartyLocation: false,\r\n  });\r\n  const [connections, setConnections] = useState(initialConnections || []);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [draggedEvent, setDraggedEvent] = useState(null);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [isCreatingConnection, setIsCreatingConnection] = useState(false);\r\n  const [connectionStart, setConnectionStart] = useState(null);\r\n  \r\n  const canvasRef = useRef(null);\r\n\r\n  // Update parent component when data changes\r\n  useEffect(() => {\r\n    if (onChange) {\r\n      onChange({\r\n        id: loreMapId,\r\n        events: events,\r\n        connections: connections\r\n      });\r\n    }\r\n  }, [events, connections, onChange, loreMapId]);\r\n\r\n  // Initialize from props\r\n  useEffect(() => {\r\n    if (initialEvents && initialEvents.length > 0) {\r\n      setEvents(initialEvents);\r\n    }\r\n    if (initialConnections && initialConnections.length > 0) {\r\n      setConnections(initialConnections);\r\n    }\r\n  }, [initialEvents, initialConnections]);\r\n\r\n  // Add these to your state variables\r\n  const [characters, setCharacters] = useState([]);\r\n  const [eventCharacters, setEventCharacters] = useState([]);\r\n\r\n  // Add this useEffect to fetch characters\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/characters', {\r\n          method: 'GET',\r\n          credentials: 'include'\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setCharacters(data);\r\n        }\r\n      } catch (err) {\r\n        console.error('Failed to fetch characters:', err);\r\n      }\r\n    };\r\n    \r\n    fetchCharacters();\r\n  }, []);\r\n\r\n  // Add this when an event is selected\r\n  useEffect(() => {\r\n    if (selectedEvent && selectedEvent.id) {\r\n      const fetchEventCharacters = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters`, {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n          });\r\n          \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setEventCharacters(data.map(ec => ec.character_id));\r\n          }\r\n        } catch (err) {\r\n          console.error('Failed to fetch event characters:', err);\r\n        }\r\n      };\r\n      \r\n      fetchEventCharacters();\r\n    } else {\r\n      setEventCharacters([]);\r\n    }\r\n  }, [selectedEvent]);\r\n\r\n  // Add character to event\r\n  const handleAddCharacterToEvent = async (characterId) => {\r\n    if (!selectedEvent || !characterId) return;\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          character_id: characterId,\r\n          role: 'present'\r\n        })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setEventCharacters([...eventCharacters, characterId]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to add character to event:', err);\r\n    }\r\n  };\r\n\r\n  // Remove character from event\r\n  const handleRemoveCharacterFromEvent = async (characterId) => {\r\n    if (!selectedEvent) return;\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/events/${selectedEvent.id}/characters/${characterId}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setEventCharacters(eventCharacters.filter(id => id !== characterId));\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to remove character from event:', err);\r\n    }\r\n  };\r\n\r\n  // Canvas right-click for new event\r\n  const handleCanvasContextMenu = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // If in connection mode, cancel it\r\n    if (isCreatingConnection) {\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    \r\n    setNewEventPosition({ x, y });\r\n    setIsCreatingEvent(true);\r\n  };\r\n\r\n  // Handle event click\r\n  const handleEventClick = (event, e) => {\r\n    e.stopPropagation();\r\n    \r\n    // If in connection creation mode, complete the connection\r\n    if (isCreatingConnection && connectionStart && connectionStart.id !== event.id) {\r\n      // Create a new connection\r\n      const newConnection = {\r\n        id: Date.now(), // Temporary ID, will be replaced when saved to backend\r\n        from: connectionStart.id,\r\n        to: event.id,\r\n        description: ''\r\n      };\r\n      \r\n      setConnections([...connections, newConnection]);\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    setSelectedEvent(event);\r\n  };\r\n\r\n  // Start creating a connection\r\n  const handleAddConnection = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    setIsCreatingConnection(true);\r\n    setConnectionStart(selectedEvent);\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Delete an event\r\n  const handleDeleteEvent = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    // Remove the event\r\n    setEvents(events.filter(e => e.id !== selectedEvent.id));\r\n    \r\n    // Remove connections to/from this event\r\n    setConnections(connections.filter(\r\n      c => c.from !== selectedEvent.id && c.to !== selectedEvent.id\r\n    ));\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Handle event drag start\r\n  const handleEventDragStart = (e, event) => {\r\n    e.stopPropagation();\r\n    \r\n    // Don't start dragging if in connection mode\r\n    if (isCreatingConnection) return;\r\n    \r\n    setIsDragging(true);\r\n    setDraggedEvent(event);\r\n    \r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    setDragOffset({\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top,\r\n    });\r\n  };\r\n\r\n  // Handle mouse move for dragging\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && draggedEvent) {\r\n      const rect = canvasRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - dragOffset.x;\r\n      const y = e.clientY - rect.top - dragOffset.y;\r\n      \r\n      setEvents(events.map(evt => \r\n        evt.id === draggedEvent.id \r\n          ? { ...evt, position: { x, y } } \r\n          : evt\r\n      ));\r\n    }\r\n  };\r\n\r\n  // Handle mouse up to stop dragging\r\n  const handleMouseUp = () => {\r\n    if (isDragging) {\r\n      setIsDragging(false);\r\n      setDraggedEvent(null);\r\n    }\r\n  };\r\n\r\n  // Create a new event\r\n  const handleCreateEvent = () => {\r\n    const newEvent = {\r\n      id: Date.now(), // Temporary ID, will be replaced when saved to backend\r\n      ...newEventData,\r\n      position: newEventPosition,\r\n    };\r\n    \r\n    setEvents([...events, newEvent]);\r\n    setIsCreatingEvent(false);\r\n    setNewEventData({\r\n      title: '',\r\n      description: '',\r\n      location: '',\r\n      isPartyLocation: false,\r\n    });\r\n  };\r\n\r\n  // Update event\r\n  const handleUpdateEvent = () => {\r\n    if (!selectedEvent) return;\r\n    \r\n    setEvents(events.map(evt => \r\n      evt.id === selectedEvent.id \r\n        ? { ...selectedEvent } \r\n        : evt\r\n    ));\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Handle canvas click to deselect \r\n  const handleCanvasClick = () => {\r\n    // If in connection mode, cancel it\r\n    if (isCreatingConnection) {\r\n      setIsCreatingConnection(false);\r\n      setConnectionStart(null);\r\n      return;\r\n    }\r\n    \r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  // Cancel event creation\r\n  const handleCancelCreate = () => {\r\n    setIsCreatingEvent(false);\r\n  };\r\n\r\n  // Draw connections between events\r\n  const renderConnections = () => {\r\n    return connections.map((connection, index) => {\r\n      const fromEvent = events.find(e => e.id === connection.from);\r\n      const toEvent = events.find(e => e.id === connection.to);\r\n      \r\n      if (!fromEvent || !toEvent) return null;\r\n      \r\n      return (\r\n        <line\r\n          key={index}\r\n          x1={fromEvent.position.x + 75}\r\n          y1={fromEvent.position.y + 25}\r\n          x2={toEvent.position.x + 75}\r\n          y2={toEvent.position.y + 25}\r\n          stroke={connectionStart && connectionStart.id === fromEvent.id ? \"#3498db\" : \"#666\"}\r\n          strokeWidth=\"2\"\r\n          markerEnd=\"url(#arrowhead)\"\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"lore-map-container\">\r\n      <div \r\n        className=\"lore-map-canvas\" \r\n        ref={canvasRef}\r\n        onContextMenu={handleCanvasContextMenu}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onMouseLeave={handleMouseUp}\r\n        onClick={handleCanvasClick}\r\n      >\r\n        <svg width=\"100%\" height=\"100%\">\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"9\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n            >\r\n              <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#666\" />\r\n            </marker>\r\n          </defs>\r\n          {renderConnections()}\r\n          \r\n          {/* Show temp connection line when creating */}\r\n          {isCreatingConnection && connectionStart && (\r\n            <line\r\n              x1={connectionStart.position.x + 75}\r\n              y1={connectionStart.position.y + 25}\r\n              x2={isDragging ? draggedEvent.position.x + 75 : window.event?.clientX - canvasRef.current.getBoundingClientRect().left}\r\n              y2={isDragging ? draggedEvent.position.y + 25 : window.event?.clientY - canvasRef.current.getBoundingClientRect().top}\r\n              stroke=\"#3498db\"\r\n              strokeWidth=\"2\"\r\n              strokeDasharray=\"5,5\"\r\n            />\r\n          )}\r\n        </svg>\r\n        \r\n        {events.map(event => (\r\n          <div\r\n            key={event.id}\r\n            className={`event-node ${event.isPartyLocation ? 'party-location' : ''} ${selectedEvent?.id === event.id ? 'selected' : ''} ${connectionStart?.id === event.id ? 'connection-source' : ''}`}\r\n            style={{\r\n              left: `${event.position.x}px`,\r\n              top: `${event.position.y}px`,\r\n            }}\r\n            onClick={(e) => handleEventClick(event, e)}\r\n            onMouseDown={(e) => handleEventDragStart(e, event)}\r\n          >\r\n            <h3>{event.title}</h3>\r\n            <div className=\"event-location\">{event.location}</div>\r\n          </div>\r\n        ))}\r\n        \r\n        {isCreatingConnection && (\r\n          <div className=\"connection-help-text\">\r\n            Click on another event to create a connection, or right-click to cancel.\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {selectedEvent && (\r\n        <div className=\"event-details-panel\">\r\n          <h3>\r\n            <input \r\n              type=\"text\" \r\n              value={selectedEvent.title}\r\n              onChange={(e) => setSelectedEvent({...selectedEvent, title: e.target.value})}\r\n            />\r\n          </h3>\r\n          <div className=\"form-group\">\r\n            <label>Location:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={selectedEvent.location}\r\n              onChange={(e) => setSelectedEvent({...selectedEvent, location: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <textarea \r\n              value={selectedEvent.description}\r\n              onChange={(e) => setSelectedEvent({...selectedEvent, description: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={selectedEvent.isPartyLocation}\r\n                onChange={(e) => setSelectedEvent({...selectedEvent, isPartyLocation: e.target.checked})}\r\n              />\r\n              Party is here\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"event-characters\">\r\n      `      <h4>Characters Present</h4>\r\n            <div className=\"character-select\">\r\n              <select \r\n                value=\"\" \r\n                onChange={(e) => {\r\n                  if (e.target.value) handleAddCharacterToEvent(parseInt(e.target.value, 10));\r\n                }}\r\n              >\r\n                <option value=\"\">Add a character...</option>\r\n                {characters.map(char => (\r\n                  <option key={char.id} value={char.id}>{char.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"character-list\">\r\n              {eventCharacters.map(charId => {\r\n                const character = characters.find(c => c.id === charId);\r\n                if (!character) return null;\r\n                \r\n                return (\r\n                  <div key={charId} className=\"event-character-item\">\r\n                    <span>{character.name}</span>\r\n                    <span className=\"character-type-badge\">{character.character_type}</span>\r\n                    <button \r\n                      className=\"remove-character-btn\"\r\n                      onClick={() => handleRemoveCharacterFromEvent(charId)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"event-action-buttons\">\r\n            <button onClick={handleUpdateEvent}>Update Event</button>\r\n            <button onClick={handleAddConnection}>Add Connection</button>\r\n            <button className=\"delete-button\" onClick={handleDeleteEvent}>Delete Event</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {isCreatingEvent && (\r\n        <div className=\"create-event-modal\">\r\n          <h3>Create New Event</h3>\r\n          <div className=\"form-group\">\r\n            <label>Title:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={newEventData.title} \r\n              onChange={(e) => setNewEventData({...newEventData, title: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Location:</label>\r\n            <input \r\n              type=\"text\" \r\n              value={newEventData.location} \r\n              onChange={(e) => setNewEventData({...newEventData, location: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <textarea \r\n              value={newEventData.description} \r\n              onChange={(e) => setNewEventData({...newEventData, description: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={newEventData.isPartyLocation} \r\n                onChange={(e) => setNewEventData({...newEventData, isPartyLocation: e.target.checked})}\r\n              />\r\n              Party is here\r\n            </label>\r\n          </div>\r\n          <div className=\"modal-actions\">\r\n            <button onClick={handleCreateEvent}>Create</button>\r\n            <button onClick={handleCancelCreate}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoreMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}